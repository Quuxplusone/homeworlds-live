{"version":3,"sources":["webpack:///./scripts/tutorials/advancedTutorials.js","webpack:///./scripts/tutorials/basicTutorials.js","webpack:///./scripts/tutorials/intermediateTutorials.js","webpack:///./scripts/tutorials/tutorialConstructor.js"],"names":["tutorialList","title","startMap","steps","startMessages","objective","hint","checkAction","action","oldState","checkEndTurn","pieces","getAllPiecesAtSystem","yourShips","yourLarges","shipToSteal","i","length","owner","serial","type","oldPiece","map","r1C","enemyLarges","endMessages","subtitle","system","actions","number","isSystemOverpopulated","b1C","yourShip","theirYellow","r3A","g3C","description","list","disableWarnings","abbr","newPiece","toUpperCase","color","getPieceInStashByType","bannedActions","newStar","data","at","b1B","nextStep","b3A","r1A","sacrifice","at1","at3","console","log","systemsToCheck","ships","concat","b3B","b1A","b2A","b2B","b2C","b3C","g1A","g1B","g1C","g2A","g2B","g2C","g3A","g3B","r1B","r2A","r2B","r2C","r3B","r3C","y1A","y1B","y1C","y2A","y2B","y2C","y3A","y3B","y3C","techFeedback","shipFeedback","starFeedback","star1","star2","ship","colorUse","duplicate","push","sizesConnected","s","String","missingSize","sizeNames","size","join","createElement","href","id","getPiecesAtHomeworlds","gameState","phase","enemyG1","fromCharCode","nextSystemID","yourSmall","pieceData","smallShip","foundOtherShip","substring","enemyShip","letters","this"],"mappings":"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","file":"/test123[request].js","sourcesContent":["// advancedTutorials.js\n//\n// Some more advanced tutorials.\n// Here I include more advanced defenses and the \"move two larges\" direct assault strategy.\n\nimport React from 'react';\nimport Tutorial from './tutorialConstructor.js';\n\n\nconst tutorialList = [\n\tnew Tutorial({\n\t\ttitle: \"Direct Assault 2.0\",\n\t\tstartMap: {\n\t\t\t\"b1A\": {\"at\": 6, \"owner\": \"enemy\"},\n\t\t\t\"b1B\": {\"at\": 1, \"owner\": null},\n\t\t\t\"b1C\": {\"at\": 5, \"owner\": \"you\"},\n\t\t\t\"b2A\": null,\n\t\t\t\"b2B\": null,\n\t\t\t\"b2C\": {\"at\": 6, \"owner\": null},\n\t\t\t\"b3A\": {\"at\": 5, \"owner\": \"you\"},\n\t\t\t\"b3B\": {\"at\": 3, \"owner\": null},\n\t\t\t\"b3C\": {\"at\": 2, \"owner\": \"enemy\"},\n\n\t\t\t\"g1A\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"g1B\": null,\n\t\t\t\"g1C\": {\"at\": 6, \"owner\": \"enemy\"},\n\t\t\t\"g2A\": {\"at\": 1, \"owner\": null},\n\t\t\t\"g2B\": {\"at\": 6, \"owner\": \"enemy\"},\n\t\t\t\"g2C\": {\"at\": 5, \"owner\": null},\n\t\t\t\"g3A\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"g3B\": {\"at\": 7, \"owner\": null},\n\t\t\t\"g3C\": {\"at\": 2, \"owner\": null},\n\n\t\t\t\"r1A\": {\"at\": 5, \"owner\": \"you\"},\n\t\t\t\"r1B\": null,\n\t\t\t\"r1C\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"r2A\": null,\n\t\t\t\"r2B\": {\"at\": 1, \"owner\": \"you\"},\n\t\t\t\"r2C\": {\"at\": 5, \"owner\": \"you\"},\n\t\t\t\"r3A\": null,\n\t\t\t\"r3B\": null,\n\t\t\t\"r3C\": null,\n\n\t\t\t\"y1A\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"y1B\": {\"at\": 1, \"owner\": \"you\"},\n\t\t\t\"y1C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"y2A\": null,\n\t\t\t\"y2B\": {\"at\": 6, \"owner\": \"enemy\"},\n\t\t\t\"y2C\": {\"at\": 7, \"owner\": \"enemy\"},\n\t\t\t\"y3A\": null,\n\t\t\t\"y3B\": {\"at\": 1, \"owner\": \"you\"},\n\t\t\t\"y3C\": null,\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"I don't think my earlier Direct Assault tutorial did the concept justice.\",\n\t\t\t\t\t\"You may be thinking that if you just have a large and a red, you're safe from direct assaults. But there are more tricky versions...\",\n\t\t\t\t\t\"Here, your opponent has a single small red. What would happen if you moved *two* large ships into their homeworld at once?\",\n\t\t\t\t\t\"(If you get stuck, there's still the Reset Turn button.)\",\n\t\t\t\t],\n\t\t\t\tobjective: \"Get two large ships in the enemy homeworld at once\",\n\t\t\t\thint: \"How many moves do you need? (The turn may look dangerous, but make it anyway.)\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\t// for the advanced tutorials I just let anything happen and check in endTurn()\n\t\t\t\t\treturn [true];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tconst pieces = oldState.getAllPiecesAtSystem(2);\n\t\t\t\t\tlet yourShips = 0;\n\t\t\t\t\tlet yourLarges = 0;\n\t\t\t\t\tlet shipToSteal = null;\n\t\t\t\t\t// count the number of larges and number of total ships (for feedback)\n\t\t\t\t\tfor (let i = 0; i < pieces.length; i++) {\n\t\t\t\t\t\tif (pieces[i].owner === \"you\") {\n\t\t\t\t\t\t\tyourShips++;\n\t\t\t\t\t\t\t// and if it's a large, increment that tally as well\n\t\t\t\t\t\t\tif (pieces[i].serial[1] === \"3\") {\n\t\t\t\t\t\t\t\tyourLarges++;\n\t\t\t\t\t\t\t\tshipToSteal = pieces[i].serial;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (yourLarges >= 2) {\n\t\t\t\t\t\treturn [true, \"Great. Now let's see what they do...\", {\n\t\t\t\t\t\t\ttype: \"steal\",\n\t\t\t\t\t\t\toldPiece: shipToSteal,\n\t\t\t\t\t\t}];\n\t\t\t\t\t} else if (yourLarges === 1) {\n\t\t\t\t\t\tif (yourShips >= 2) {\n\t\t\t\t\t\t\treturn [false, [\n\t\t\t\t\t\t\t\t\"Hmmm... looks like you got two ships in, but only one of them is large.\",\n\t\t\t\t\t\t\t\t\"When your opponent attacks the first large, you won't be strong enough to strike back...\",\n\t\t\t\t\t\t\t\t\"How about you Reset Turn and try to get two *large* ships in?\",\n\t\t\t\t\t\t\t]];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, [\n\t\t\t\t\t\t\t\t\"Hmmm... You haven't failed, you just found a way to only get one ship in. Can you get two large ships in?\",\n\t\t\t\t\t\t\t]];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"Hmmm... in order to take over the enemy homeworld, we need *large* ships (to defeat the large blue).\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Notice they only have a small red, so they can only do one capture.\",\n\t\t\t\t\t\"But YOU have a medium red (actually two), so you can sacrifice it for 2 captures!\",\n\t\t\t\t],\n\t\t\t\thint: \"You have to sacrifice a medium to get 2 actions.\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\treturn [true];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\t// did you steal the red?\n\t\t\t\t\tif (oldState.map.r1C.owner === \"you\") {\n\t\t\t\t\t\treturn [true, \"Very clever! You've left them unable to fight back. Your opponent resigns!\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// otherwise, count to see what you did\n\t\t\t\t\tconst pieces = oldState.getAllPiecesAtSystem(2);\n\t\t\t\t\tlet enemyLarges = 0;\n\t\t\t\t\t// count the number of larges and number of total ships (for feedback)\n\t\t\t\t\tfor (let i = 0; i < pieces.length; i++) {\n\t\t\t\t\t\tif (pieces[i].owner === \"enemy\" && pieces[i].serial[1] === 3) {\n\t\t\t\t\t\t\tenemyLarges++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (enemyLarges >= 2) {\n\t\t\t\t\t\treturn [false, \"Hmmm... they still have three ships, so don't end your turn yet! (Reset Turn if you need to)\"];\n\t\t\t\t\t} else if (enemyLarges === 1) {\n\t\t\t\t\t\treturn [false, \"Hmmm... you stole one of their ships, but they're going to keep fighting. Try again, and see if you can capture BOTH large ships at once.\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [true, \"Great job! With only a small left, all they can do is delay. Your opponent resigns!\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}\n\t\t],\n\t\tendMessages: [\n\t\t\t\"So yeah. I guess always have a medium red if you can (although a large is better, so they don't send 3 ships).\",\n\t\t\t\"And make sure that large red isn't the sole large defending your homeworld -- you can't have your ship and sacrifice it too!\",\n\t\t\t\"I guess the real lesson is: have as much red as you can store safely!\",\n\t\t\t\"(Yeah, I know. All colors are important. It's hard to get everything. Hey, it's a strategy game...)\",\n\t\t],\n\t}),\n\n\tnew Tutorial({\n\t\ttitle: \"Star Demolition 2.0\",\n\t\tsubtitle: \"Slow and steady\",\n\t\tstartMap: {\n\t\t\t\"b1A\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"b1B\": {\"at\": 8, \"owner\": \"you\"},\n\t\t\t\"b1C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"b2A\": null,\n\t\t\t\"b2B\": {\"at\": 8, \"owner\": \"you\"},\n\t\t\t\"b2C\": null,\n\t\t\t\"b3A\": {\"at\": 11, \"owner\": \"enemy\"},\n\t\t\t\"b3B\": {\"at\": 7, \"owner\": null},\n\t\t\t\"b3C\": {\"at\": 1, \"owner\": null},\n\n\t\t\t\"g1A\": {\"at\": 9, \"owner\": null},\n\t\t\t\"g1B\": {\"at\": 10, \"owner\": \"enemy\"},\n\t\t\t\"g1C\": {\"at\": 10, \"owner\": \"enemy\"},\n\t\t\t\"g2A\": {\"at\": 1, \"owner\": null},\n\t\t\t\"g2B\": {\"at\": 7, \"owner\": \"you\"},\n\t\t\t\"g2C\": {\"at\": 14, \"owner\": null},\n\t\t\t\"g3A\": {\"at\": 8, \"owner\": null},\n\t\t\t\"g3B\": {\"at\": 12, \"owner\": \"enemy\"},\n\t\t\t\"g3C\": {\"at\": 2, \"owner\": \"enemy\"},\n\n\t\t\t\"r1A\": {\"at\": 11, \"owner\": \"enemy\"},\n\t\t\t\"r1B\": {\"at\": 10, \"owner\": \"enemy\"},\n\t\t\t\"r1C\": {\"at\": 11, \"owner\": \"enemy\"},\n\t\t\t\"r2A\": {\"at\": 14, \"owner\": \"you\"},\n\t\t\t\"r2B\": {\"at\": 14, \"owner\": \"you\"},\n\t\t\t\"r2C\": {\"at\": 10, \"owner\": \"enemy\"},\n\t\t\t\"r3A\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"r3B\": {\"at\": 8, \"owner\": \"you\"},\n\t\t\t\"r3C\": {\"at\": 1, \"owner\": \"you\"},\n\n\t\t\t\"y1A\": {\"at\": 8, \"owner\": \"you\"},\n\t\t\t\"y1B\": {\"at\": 9, \"owner\": \"enemy\"},\n\t\t\t\"y1C\": {\"at\": 12, \"owner\": null},\n\t\t\t\"y2A\": {\"at\": 7, \"owner\": \"you\"},\n\t\t\t\"y2B\": {\"at\": 11, \"owner\": null},\n\t\t\t\"y2C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"y3A\": {\"at\": 7, \"owner\": \"you\"},\n\t\t\t\"y3B\": {\"at\": 10, \"owner\": null},\n\t\t\t\"y3C\": {\"at\": 9, \"owner\": \"enemy\"},\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Sorry for the messy map...\",\n\t\t\t\t\t\"...and I know you can't see all of it because of this popup, but...\",\n\t\t\t\t\t\"OK, so it's a Star Demolition. But you only have two blues and three yellows!\",\n\t\t\t\t\t\"But wait... I spy a blue ship hanging out in their homeworld. You could sac(rifice) a yellow to blow up their blues!\",\n\t\t\t\t\t\"...oh wait. Then you won't have enough yellows for the second part...\",\n\t\t\t\t\t\"...\",\n\t\t\t\t\t\"What if you just moved your blue ships in one at a time?\",\n\t\t\t\t],\n\t\t\t\thint: \"You don't want to sacrifice yellow (or anything, for that matter), because you'll need them.\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"sacrifice\") {\n\t\t\t\t\t\treturn [false, \"You don't want to sacrifice anything here. You need all the ships you have!\"];\n\t\t\t\t\t} else if (action.type === \"build\") {\n\t\t\t\t\t\treturn [false, [\n\t\t\t\t\t\t\t\"Ooh, interesting, trying to get more ammo?\",\n\t\t\t\t\t\t\t\"Sadly, that's not going to work here because you'll have 3 blue ships there...\",\n\t\t\t\t\t\t\t\"...and your opponent will just move their small blue in and cause a catastrophe!\",\n\t\t\t\t\t\t]];\n\t\t\t\t\t} else if (action.type === \"trade\") {\n\t\t\t\t\t\treturn [false, [\n\t\t\t\t\t\t\t\"Hmmm... trying to get more ammo, eh?\",\n\t\t\t\t\t\t\t\"You have two blue ships at that system, though...\",\n\t\t\t\t\t\t\t\"Your opponent would probably sacrifice their large yellow and send their own two blues in. This will wipe out all your ships there.\",\n\t\t\t\t\t\t\t\"Including *your* large yellow.\",\n\t\t\t\t\t\t\t\"Let's try just moving one of your own blue ships into the enemy homeworld.\",\n\t\t\t\t\t\t]];\n\t\t\t\t\t} else if (action.type === \"move\" && action.system === 2) {\n\t\t\t\t\t\tif (action.oldPiece[0] === \"b\") {\n\t\t\t\t\t\t\t// yay!\n\t\t\t\t\t\t\treturn [true];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"Oh, almost! Can you move a *blue* ship? Then you'll be one away from a blue catastrophe in their homeworld.\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// the only possibility left is a move or discovery that isn't into the homeworld\n\t\t\t\t\t\treturn [false, \"Where are you going with that? We want to invade the enemy's homeworld!\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\t// since I verified it in checkAction\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"Don't end your turn now, you still have work to do!\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn [true, \"Three isn't enough for a catastrophe, but you can move the other one in next turn, right?\", {\n\t\t\t\t\t\t// this is a bad move but it's instructive\n\t\t\t\t\t\ttype: \"move\",\n\t\t\t\t\t\toldPiece: \"b1A\",\n\t\t\t\t\t\tsystem: 10, // if they move to 7, you sac an r2 at 14 and steal it\n\t\t\t\t\t}];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Oh, no! They moved their blue out! Now you don't have enough blues for the catastrophe...\",\n\t\t\t\t\t\"But wait. There are two blues in the bank. You could build some.\",\n\t\t\t\t\t\"In fact... you could even build th3mmin|$y^Q5}/...\\n\\n[SIGNAL LOST]\",\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"...and by the way, I intercepted enemy plans to attack your homeworld in about 4 turns. You may want to strike sooner rather than later.\",\n\t\t\t\t],\n\t\t\t\thint: \"What if you built blue directly in the enemy's homeworld? (You can, if you do something else first.)\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"catastrophe\") {\n\t\t\t\t\t\treturn [true];\n\t\t\t\t\t} else if (action.type === \"build\") {\n\t\t\t\t\t\tif (action.system === 2) {\n\t\t\t\t\t\t\treturn [true];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"That probably works, but building now and moving later uses up a lot of time. Can you blow up their blue star *this turn*?\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (action.type === \"sacrifice\") {\n\t\t\t\t\t\tif (action.oldPiece[0] === \"g\") {\n\t\t\t\t\t\t\treturn [true];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"Oh, you don't want to sacrifice that, because you'll need it later! You only have three yellows!\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (action.type === \"move\") {\n\t\t\t\t\t\treturn [false, \"Hmmm... That could work, but it's rather slow. Can you blow up their blue star *this turn*?\"]\n\t\t\t\t\t} else if (action.type === \"discover\") {\n\t\t\t\t\t\treturn [false, \"Uhhh... where are you going with that? Did you mis-click?\"];\n\t\t\t\t\t} else if (action.type === \"trade\") {\n\t\t\t\t\t\treturn [false, \"Interesting try, but your opponent still has enough moves to blow up system #7 if they sacrifice their large yellow.\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"I'm not entirely sure what you did... did you mis-click?\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.isSystemOverpopulated('b', 2)) {\n\t\t\t\t\t\treturn [false, \"You have to trigger the catastrophe first!\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"You haven't completed all your actions yet, so don't end your turn!\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (oldState.map.b1C) { // b1C is the blue star\n\t\t\t\t\t\treturn [false, \"Hmmm... Time isn't on your side here. Can you think of a way to destroy their home star in one turn? (Reset Turn if you need to)\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn [true, \"There you go! Green sacrifice for the win! (But you're only halfway there.)\", {\n\t\t\t\t\t\ttype: \"move\",\n\t\t\t\t\t\toldPiece: \"r1A\",\n\t\t\t\t\t\tsystem: 12,\n\t\t\t\t\t}];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Uh oh, things are getting tense...\",\n\t\t\t\t\t\"So about that yellow star...\",\n\t\t\t\t\t\"You have three yellow ships, and one of them is large.\",\n\t\t\t\t\t\"But unfortunately, you can't have your ship and sacrifice it too!\",\n\t\t\t\t\t\"...\",\n\t\t\t\t\t\"I'll let you in on a little secret...\",\n\t\t\t\t\t\"With three ships, you have to do it in a certain way.\",\n\t\t\t\t\t\"The *SECOND* ship has to be the large one.\",\n\t\t\t\t\t\"Wait... why? Well, move your small or medium yellow in now...\",\n\t\t\t\t],\n\t\t\t\thint: [\n\t\t\t\t\t\"You want to know the reason? Here you go.\",\n\t\t\t\t\t\"(1) You move your small (or medium) yellow in now. Opponent captures it.\",\n\t\t\t\t\t\"(2) You move your large yellow in. Opponent *wants* to move the first yellow out (like they did with the blue), but if they do, you sacrifice a red and capture all their ships.\",\n\t\t\t\t\t\"(2, cont.) So they steal your large yellow. This means both yellows are still inside.\",\n\t\t\t\t\t\"(3) Finally, you move your last yellow in. That's 4 (3 ships + 1 star). Call catastrophe. You win!\",\n\t\t\t\t\t\"Want to see that in action? Let's do it!\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"move\") {\n\t\t\t\t\t\tif (action.system !== 2) {\n\t\t\t\t\t\t\treturn [false, \"You want to move into the enemy's homeworld. Did you mis-click?\"];\n\t\t\t\t\t\t} else if (action.oldPiece[0] !== \"y\") {\n\t\t\t\t\t\t\treturn [false, \"You want to move YELLOW pieces into their homeworld, because yellow is their star color.\"];\n\t\t\t\t\t\t} else if (action.oldPiece[1] === \"3\") {\n\t\t\t\t\t\t\treturn [false, \"You don't want to move your large yet, for reasons you'll see next turn...\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [true];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (action.type === \"sacrifice\") {\n\t\t\t\t\t\treturn [false, \"You don't want to sacrifice anything, because you need all three of your yellows!\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"In order to win, you're going to have to move ships in to the enemy homeworld.\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"Don't end your turn yet. You still have work to do!\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// get your yellow ship\n\t\t\t\t\tlet yourShip = null;\n\t\t\t\t\tconst pieces = oldState.getAllPiecesAtSystem(2);\n\t\t\t\t\tfor (let i = 0; i < pieces.length; i++) {\n\t\t\t\t\t\tif (pieces[i].owner === \"you\") {\n\t\t\t\t\t\t\tyourShip = pieces[i].serial;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn [true, \"Hmmm... Let's see, will your opponent press their own attack or respond to your threat?\", {\n\t\t\t\t\t\ttype: \"steal\",\n\t\t\t\t\t\toldPiece: yourShip,\n\t\t\t\t\t}];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Hmmm... so they're playing defense.\",\n\t\t\t\t\t\"(Not like they had enough time for their own attack...)\",\n\t\t\t\t\t\"All right, so I told you the second ship had to be large.\",\n\t\t\t\t\t\"You see, after you move, your opponent would like to move the first yellow out...\",\n\t\t\t\t\t\"...but if you invade with a large now, and they do that, you'll be able to sacrifice red and do a Direct Assault!\",\n\t\t\t\t\t\"Or, if they capture the large yellow, you just move your third and final ship in and call catastrophe!\",\n\t\t\t\t\t\"So... let's send in the large yellow!\",\n\t\t\t\t],\n\t\t\t\thint: [\n\t\t\t\t\t\"Error 404: Hint Not Found.\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"sacrifice\") {\n\t\t\t\t\t\treturn [false, \"You don't need to sacrifice anything. Just move the large yellow in directly!\"];\n\t\t\t\t\t} else if (action.type === \"move\") {\n\t\t\t\t\t\tif (action.oldPiece[0] !== \"y\") {\n\t\t\t\t\t\t\treturn [false, \"You need to move the large YELLOW ship, in order to cause a yellow catastrophe and destroy the star.\"];\n\t\t\t\t\t\t} else if (action.oldPiece[1] !== \"3\") {\n\t\t\t\t\t\t\treturn [false, \"You need to move the LARGE yellow ship, because that threatens to win by Direct Assault.\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"You haven't done anything yet, so it's not time to end your turn!\"];\n\t\t\t\t\t}\n\t\t\t\t\t// find their yellow\n\t\t\t\t\tconst pieces = oldState.getAllPiecesAtSystem(2);\n\t\t\t\t\tlet theirYellow = null;\n\t\t\t\t\tfor (let i = 0; i < pieces.length; i++) {\n\t\t\t\t\t\t// must be a yellow owned by the enemy\n\t\t\t\t\t\tif (pieces[i].serial[0] === 'y' && pieces[i].owner === \"enemy\") {\n\t\t\t\t\t\t\ttheirYellow = pieces[i].serial;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn [true, \"Good. See the double threat? For example, if your opponent tries to leave now...\", {\n\t\t\t\t\t\ttype: \"discover\",\n\t\t\t\t\t\toldPiece: theirYellow,\n\t\t\t\t\t\tsystem: 7,\n\t\t\t\t\t}];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"So... It looks like you don't get to do a Star Demolition after all!\",\n\t\t\t\t\t\"But I think you know what you have to do now.\",\n\t\t\t\t\t\"Just don't abandon your own homeworld!\",\n\t\t\t\t],\n\t\t\t\thint: \"Sacrifice something...\",\n\t\t\t\tcheckAction: function(action) {\n\t\t\t\t\tif (action.type === \"sacrifice\") {\n\t\t\t\t\t\tif (action.oldPiece === \"r3C\") {\n\t\t\t\t\t\t\treturn [false, \"You did that on purpose, didn't you... If you abandon your homeworld AND destroy the enemy it's a draw.\"];\n\t\t\t\t\t\t} else if (action.oldPiece[0] !== \"r\") {\n\t\t\t\t\t\t\treturn [false, \"Ah, you see, you need to sacrifice a *RED* ship here, and capture the enemy ships.\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [true];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (action.type === \"steal\") {\n\t\t\t\t\t\treturn [true];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"Actually, you can win right away via Direct Assault. Try a red sacrifice.\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.r3A.owner !== \"you\" || oldState.g3C.owner !== \"you\") {\n\t\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\t\treturn [false, \"You're not quite done yet... (or you found 1 more way not to win, and should Reset Turn)\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"Hmmm... looks like you ran out of ammo. Let's try again.\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [true, \"You have won! Whew that was a lot.\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tendMessages: [\n\t\t\t\"Wow...\",\n\t\t\t\"That was a lot to take in.\",\n\t\t\t\"Notice how your opponent responded to everything you did?\",\n\t\t\t\"Their \\\"attack\\\" never got off the ground.\",\n\t\t\t// I do a find-and-replace to change s-o-u-t-h into \"you\" when the maps come out of the sandbox\n\t\t\t\"In fact, I think they could have gotten you first, so don't share this as \\\"sou\" + \"th to play and win in 5 turns\\\" because it isn't.\",\n\t\t],\n\t}),\n];\nexport default {\n\ttitle: \"Advanced Tutorials\",\n\tdescription: \"Here you will learn some more advanced stuff. Right now I have more complicated versions of the Direct Assault and Star Demolition techniques.\",\n\tlist: tutorialList,\n};","// basicTutorials.js\n//\n// the hope is that we don't load the entire thing at once\n// but only load the modules the user actually might play\n\nimport React from 'react';\nimport Tutorial from './tutorialConstructor.js';\n\n/*\nconst template = {\n\t\t\tb1A: null,\n\t\t\tb1B: null,\n\t\t\tb1C: null,\n\t\t\tb2A: null,\n\t\t\tb2B: null,\n\t\t\tb2C: null,\n\t\t\tb3A: null,\n\t\t\tb3B: null,\n\t\t\tb3C: null,\n\t\t\t\n\t\t\tg1A: null,\n\t\t\tg1B: null,\n\t\t\tg1C: null,\n\t\t\tg2A: null,\n\t\t\tg2B: null,\n\t\t\tg2C: null,\n\t\t\tg3A: null,\n\t\t\tg3B: null,\n\t\t\tg3C: null,\n\t\t\t\n\t\t\tr1A: null,\n\t\t\tr1B: null,\n\t\t\tr1C: null,\n\t\t\tr2A: null,\n\t\t\tr2B: null,\n\t\t\tr2C: null,\n\t\t\tr3A: null,\n\t\t\tr3B: null,\n\t\t\tr3C: null,\n\t\t\t\n\t\t\ty1A: null,\n\t\t\ty1B: null,\n\t\t\ty1C: null,\n\t\t\ty2A: null,\n\t\t\ty2B: null,\n\t\t\ty2C: null,\n\t\t\ty3A: null,\n\t\t\ty3B: null,\n\t\t\ty3C: null,\n};\n*/\n\nconst tutorialList = [\n\t// Building\n\tnew Tutorial({\n\t\ttitle: \"Building Ships\",\n\t\tdisableWarnings: true,\n\t\tstartMap: {\n\t\t\t\"b1A\": null,\n\t\t\t\"b1B\": null,\n\t\t\t\"b1C\": null,\n\t\t\t\"b2A\": null,\n\t\t\t\"b2B\": null,\n\t\t\t\"b2C\": null,\n\t\t\t\"b3A\": null,\n\t\t\t\"b3B\": null,\n\t\t\t\"b3C\": {\"at\": 5, \"owner\": null},\n\n\t\t\t\"g1A\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"g1B\": {\"at\": 5, \"owner\": \"enemy\"},\n\t\t\t\"g1C\": null,\n\t\t\t\"g2A\": null,\n\t\t\t\"g2B\": {\"at\": 4, \"owner\": null},\n\t\t\t\"g2C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"g3A\": null,\n\t\t\t\"g3B\": null,\n\t\t\t\"g3C\": {\"at\": 1, \"owner\": \"you\"},\n\n\t\t\t\"r1A\": {\"at\": 4, \"owner\": \"you\"},\n\t\t\t\"r1B\": null,\n\t\t\t\"r1C\": null,\n\t\t\t\"r2A\": null,\n\t\t\t\"r2B\": null,\n\t\t\t\"r2C\": {\"at\": 3, \"owner\": null},\n\t\t\t\"r3A\": null,\n\t\t\t\"r3B\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"r3C\": {\"at\": 1, \"owner\": null},\n\n\t\t\t\"y1A\": null,\n\t\t\t\"y1B\": null,\n\t\t\t\"y1C\": null,\n\t\t\t\"y2A\": null,\n\t\t\t\"y2B\": null,\n\t\t\t\"y2C\": null,\n\t\t\t\"y3A\": null,\n\t\t\t\"y3B\": null,\n\t\t\t\"y3C\": null,\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Welcome to the Homeworlds Tutorial! Here I will walk you through the fundamentals of gameplay. Please note you will have to learn by *doing*, so pay attention.\",\n\t\t\t\t\t\"Homeworlds is typically played on a tabletop with colorful pyramids which represent stars (when vertical) or starships (when lying down, pointing away from the owner).\",\n\t\t\t\t\t\"On this web version, ships are triangles and stars are squares. The ships next to the stars are considered at that star system.\",\n\t\t\t\t\t\"The goal of the game is to destroy or conquer your opponent's homeworld. You do this by building and changing starships, discovering new systems, and eventually capturing or blowing up opponent's stuff.\",\n\t\t\t\t\t\"Let's begin with building. Click one of the ships pointing upwards, and then click the \\\"Build\\\" button to create a new ship.\",\n\t\t\t\t\t\"If you get stuck, there is Show Intro (which displays these messages again) and Show Hint in the upper right.\",\n\t\t\t\t],\n\t\t\t\thint: [\n\t\t\t\t\t\"Your ships are the three triangles on the bottom half of the screen.\",\n\t\t\t\t\t\"If you have four, you have already built; just click End Turn.\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"sacrifice\") {\n\t\t\t\t\t\treturn [false, \"I'll get to sacrificing later. For now let's concentrate on building ships.\"];\n\t\t\t\t\t}\n\t\t\t\t\tconst abbr = action.newPiece[0].toUpperCase();\n\t\t\t\t\tconst color = (abbr === \"R\" ? \"red\" : \"green\");\n\t\t\t\t\treturn [true, [\n\t\t\t\t\t\t\"Good job. Did you notice how it automatically gave you a small \" + color + \" ship at the same star?\",\n\t\t\t\t\t\t\"You may have also noticed the \" + abbr + \"1 thing on the button. The \" + abbr + \" part is for \" + color + \", and the 1 is for small (they come in 3 sizes). Similarly, B2 would be a medium blue, and so on.\",\n\t\t\t\t\t\t\"Anyway, your turn is over now. Click the purple End Turn button on the lower right to continue. (You can also Reset Turn, if you want to change your mind.)\",\n\t\t\t\t\t]];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\t// make sure you used your build action\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"Don't end your turn yet! Build a new ship first!\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [true, \"All right. Now it's your opponent's turn. They are probably going to build something too...\", {\n\t\t\t\t\t\t\ttype: \"build\",\n\t\t\t\t\t\t\t// get an available R1\n\t\t\t\t\t\t\tnewPiece: oldState.getPieceInStashByType(\"r1\"),\n\t\t\t\t\t\t\tsystem: 2,\n\t\t\t\t\t\t}]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"They built a small red ship of their own!\\nThis is actually interesting...\",\n\t\t\t\t\t\"If you look at the Stash on the right, you will see that there are three of each piece total (some are on the board).\",\n\t\t\t\t\t\"This actually means that there is a limited supply of pieces. Homeworlds may be a war, but it's a very *economic* war, complete with supply and investments and exchanges. (We'll get to most of that later.)\",\n\t\t\t\t\t\"Anyway, when you build, there are two main rules:\\n\" +\n\t\t\t\t\t\t\"(1) You can only build a ship of the *same color* as a ship you already have at that star, and\\n\" +\n\t\t\t\t\t\t\"(2) You can only build the smallest *available* piece (i.e. in the Bank) of any given color.\",\n\t\t\t\t\t\"It's important to note that you do NOT \\\"grow\\\" a ship. You only get bigger ones by building when the Bank is out of smaller pieces of that color.\",\n\t\t\t\t\t\"Given this, your challenge is to build a medium ship (two pips)!\\n(Again, hint button is on the top left)\",\n\t\t\t\t],\n\t\t\t\thint: [\n\t\t\t\t\t\"Look at the Bank. Which color does not have smalls available?\",\n\t\t\t\t\t\"Remember you have to click an existing ship of yours first to build.\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type !== \"build\") {\n\t\t\t\t\t\treturn [false, \"I'll get to sacrificing in a later module.\"];\n\t\t\t\t\t}\n\t\t\t\t\tif (action.newPiece[1] !== \"2\") {\n\t\t\t\t\t\treturn [false, \"Unfortunately, building that color only gives you a small ship, because there is one in the Bank. See if you can build a medium (size-2) ship.\"];\n\t\t\t\t\t}\n\t\t\t\t\treturn [true, \"Remember to end your turn every time...\"];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"Don't end your turn yet!\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [true, \"Good job. Let's see now what your opponent does...\", {\n\t\t\t\t\t\t\ttype: \"trade\",\n\t\t\t\t\t\t\toldPiece: \"g1B\",\n\t\t\t\t\t\t\tnewPiece: \"y1C\",\n\t\t\t\t\t\t}];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\tendMessages: [\n\t\t\t\"What was that? Their ship just changed color!\",\n\t\t\t\"That's a subject for another module. Click the green \\\"Next Module\\\" button at the top to continue!\",\n\t\t],\n\t}),\n\t\n\t// Trading\n\tnew Tutorial({\n\t\ttitle: \"Trading Ships\",\n\t\tdisableWarnings: true,\n\t\tstartMap: {\n\t\t\t\"b1A\": {\"at\": 6, \"owner\": \"you\"},\n\t\t\t\"b1B\": {\"at\": 3, \"owner\": null},\n\t\t\t\"b1C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"b2A\": null,\n\t\t\t\"b2B\": null,\n\t\t\t\"b2C\": {\"at\": 6, \"owner\": \"you\"},\n\t\t\t\"b3A\": null,\n\t\t\t\"b3B\": {\"at\": 5, \"owner\": null},\n\t\t\t\"b3C\": {\"at\": 1, \"owner\": null},\n\n\t\t\t\"g1A\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"g1B\": {\"at\": 6, \"owner\": null},\n\t\t\t\"g1C\": {\"at\": 5, \"owner\": \"enemy\"},\n\t\t\t\"g2A\": {\"at\": 9, \"owner\": \"you\"},\n\t\t\t\"g2B\": {\"at\": 1, \"owner\": \"you\"},\n\t\t\t\"g2C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"g3A\": {\"at\": 9, \"owner\": \"you\"},\n\t\t\t\"g3B\": {\"at\": 4, \"owner\": null},\n\t\t\t\"g3C\": {\"at\": 1, \"owner\": \"you\"},\n\n\t\t\t\"r1A\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"r1B\": {\"at\": 9, \"owner\": null},\n\t\t\t\"r1C\": {\"at\": 8, \"owner\": \"enemy\"},\n\t\t\t\"r2A\": null,\n\t\t\t\"r2B\": null,\n\t\t\t\"r2C\": {\"at\": 1, \"owner\": null},\n\t\t\t\"r3A\": null,\n\t\t\t\"r3B\": null,\n\t\t\t\"r3C\": null,\n\n\t\t\t\"y1A\": {\"at\": 4, \"owner\": \"enemy\"},\n\t\t\t\"y1B\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"y1C\": {\"at\": 5, \"owner\": \"enemy\"},\n\t\t\t\"y2A\": {\"at\": 5, \"owner\": \"enemy\"},\n\t\t\t\"y2B\": {\"at\": 4, \"owner\": \"enemy\"},\n\t\t\t\"y2C\": {\"at\": 7, \"owner\": \"enemy\"},\n\t\t\t\"y3A\": {\"at\": 8, \"owner\": null},\n\t\t\t\"y3B\": {\"at\": 7, \"owner\": null},\n\t\t\t\"y3C\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Building ships is important, but you can only build colors you already have. The next color, blue, allows you to change colors of your ships.\",\n\t\t\t\t\t\"When you trade, you first click on one of your ships, then click a piece from the Stash *of the same size*.\",\n\t\t\t\t\t\"Also, you have to have access to blue technology there. Blue technology can come either from one of your ships (even if it isn't the one being traded) or from a star.\",\n\t\t\t\t\t\"Your goal this turn is to obtain a red ship.\",\n\t\t\t\t],\n\t\t\t\thint: [\n\t\t\t\t\t\"Remember you have to have blue at the system AND there has to be a matching red in the Bank.\",\n\t\t\t\t\t\"You can only trade equal sizes (small for small, medium for medium, or large for large)!\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"build\") {\n\t\t\t\t\t\treturn [false, \"That's ok, but this lesson is about trading. Can you trade to get a red ship?\"];\n\t\t\t\t\t}\n\t\t\t\t\tif (action.type === \"sacrifice\") {\n\t\t\t\t\t\treturn [false, \"We will cover sacrifice actions later.\"];\n\t\t\t\t\t}\n\t\t\t\t\tif (action.type === \"trade\") {\n\t\t\t\t\t\tif (action.newPiece[0] === \"r\") {\n\t\t\t\t\t\t\treturn [true, \"Great job! Remember to end your turn!\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"Good trade. However, I would like you to see if you can get a RED ship.\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn [false, \"Not entirely sure what you did, but it doesn't look like a trade to me.\"];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"Don't end your turn yet!\"];\n\t\t\t\t\t}\n\t\t\t\t\treturn [true, \"Good work. Once again, let's see what your opponent does...\", {\n\t\t\t\t\t\ttype: \"trade\",\n\t\t\t\t\t\toldPiece: \"y2A\",\n\t\t\t\t\t\tnewPiece: oldState.getPieceInStashByType('r2'),\n\t\t\t\t\t}];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"It looks like they also traded for a red.\",\n\t\t\t\t\t\"Now that you have one red ship, you could build more.\",\n\t\t\t\t\t\"But notice something else. All the yellow pieces were in play, but now that your opponent traded out their yellow, you can get your own.\",\n\t\t\t\t\t\"Your challenge this turn: Obtain a yellow, but keep your red ship.\",\n\t\t\t\t],\n\t\t\t\tobjective: \"Obtain a yellow ship (and also keep your red one)\",\n\t\t\t\thint: [\n\t\t\t\t\t\"What size is the yellow in the Bank?\",\n\t\t\t\t\t\"Remember you can do a trade at any system with something blue there!\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"trade\") {\n\t\t\t\t\t\tif (action.newPiece[0] === \"y\") {\n\t\t\t\t\t\t\t// you traded for a yellow\n\t\t\t\t\t\t\t// but did you give up your only red?\n\t\t\t\t\t\t\tif (action.oldPiece[0] === \"r\") {\n\t\t\t\t\t\t\t\treturn [false, \"That's great, except you just traded away your only red ship!\\nCan you get a yellow WITHOUT losing your red?\"];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn [true, \"Good. From now on you won't always see a message after every single action. Just end your turn.\"];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"Hmmm. Looks like you did a successful trade, but can you please specifically trade for a *yellow* ship?\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (action.type === \"sacrifice\") {\n\t\t\t\t\t\treturn [false, \"Patience! Sacrifices are a little tricky and I'll cover them later.\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"That doesn't get you a yellow ship.\"]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"Don't end your turn yet!\"];\n\t\t\t\t\t}\n\t\t\t\t\t// no message because this is the last slide\n\t\t\t\t\treturn [true];\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\tendMessages: [\n\t\t\t\"It's great if you have ships of all four colors, because then you can in theory build any color (although other factors may get in the way).\",\n\t\t\t\"Now, what's all the fuss about yellow and red ships? Well, each color is an ability. For that, it's time for a new module...\",\n\t\t\t\"Oh, did you notice two of the star systems had 2 stars instead of 1? Those are your homeworld and your opponent's homeworld! We'll see more about that in a bit.\",\n\t\t],\n\t}),\n\t\n\t// Movement (and discovery)\n\tnew Tutorial({\n\t\ttitle: \"Movement\",\n\t\tdisableWarnings: true,\n\t\tstartMap: {\n\t\t\t\"b1A\": null,\n\t\t\t\"b1B\": null,\n\t\t\t\"b1C\": {\"at\": 1, \"owner\": null},\n\t\t\t\"b2A\": null,\n\t\t\t\"b2B\": null,\n\t\t\t\"b2C\": null,\n\t\t\t\"b3A\": null,\n\t\t\t\"b3B\": null,\n\t\t\t\"b3C\": {\"at\": 2, \"owner\": null},\n\n\t\t\t\"g1A\": null,\n\t\t\t\"g1B\": null,\n\t\t\t\"g1C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"g2A\": null,\n\t\t\t\"g2B\": null,\n\t\t\t\"g2C\": null,\n\t\t\t\"g3A\": null,\n\t\t\t\"g3B\": {\"at\": 3, \"owner\": null},\n\t\t\t\"g3C\": {\"at\": 1, \"owner\": \"you\"},\n\n\t\t\t\"r1A\": null,\n\t\t\t\"r1B\": null,\n\t\t\t\"r1C\": null,\n\t\t\t\"r2A\": null,\n\t\t\t\"r2B\": null,\n\t\t\t\"r2C\": {\"at\": 1, \"owner\": null},\n\t\t\t\"r3A\": null,\n\t\t\t\"r3B\": null,\n\t\t\t\"r3C\": {\"at\": 2, \"owner\": \"enemy\"},\n\n\t\t\t\"y1A\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"y1B\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"y1C\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"y2A\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"y2B\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"y2C\": null,\n\t\t\t\"y3A\": null,\n\t\t\t\"y3B\": null,\n\t\t\t\"y3C\": null,\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Ah, yellow. Probably the trickiest color in the game.\",\n\t\t\t\t\t\"Yellow is the color of movement. Now, the stars have sizes just like ships (they actually use the same pool of pieces). The rule on movement is...\",\n\t\t\t\t\t\"You can move between two star systems if they are *different sizes*.\",\n\t\t\t\t\t\"Now, this website tries to smartly arrange the stars to help you visualize the connections. However, this is *only* a visual aid, and really all that matters is the star's size.\",\n\t\t\t\t\t\"Anyway, to do a move, click the ship, then click the \\\"move\\\" button, then click the system you want to move to.\",\n\t\t\t\t\t\"How about we get started with a simple move: Move one of your yellow ships to your homeworld.\",\n\t\t\t\t],\n\t\t\t\tbannedActions: {\n\t\t\t\t\t\"discover\": \"Moving and discovering are slightly different (although both use yellow). Let's stick to movement for now.\",\n\t\t\t\t},\n\t\t\t\thint: [\n\t\t\t\t\t\"Your homeworld is the system that has 2 stars and one large green ship.\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"move\") {\n\t\t\t\t\t\treturn [true];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"That's all well and good, but we're doing movement now.\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"Whoops. Don't end your turn quite yet...\"];\n\t\t\t\t\t}\n\t\t\t\t\treturn [true, \"Opponent moves...\", {\n\t\t\t\t\t\ttype: \"discover\",\n\t\t\t\t\t\toldPiece: \"y1B\",\n\t\t\t\t\t\tnewPiece: \"g2A\",\n\t\t\t\t\t}];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Oh neat, a new star just appeared on the map!\",\n\t\t\t\t\t\"In fact, you can discover a star any time you have movement power. In the physical game, you just add a piece to the board, then move there.\",\n\t\t\t\t\t\"(Note: Homeworld systems always start out as two-star systems. All other systems are single stars.)\",\n\t\t\t\t\t\"Here, to discover a system, you first click the piece you want to move, then click the \\\"Discover a system...\\\" button in the popup.\",\n\t\t\t\t\t\"Then you click a piece in the Bank. Just like with normal movement, it must be a different size to the star you started in. (The STAR, not the ship.)\",\n\t\t\t\t\t\"Now, your task is to discover a new system. You can use either yellow, but keep the large green home.\",\n\t\t\t\t],\n\t\t\t\thint: [\n\t\t\t\t\t\"First click the ship, then click a star in the Bank.\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"discover\") {\n\t\t\t\t\t\tif (action.oldPiece[1] === \"3\") {\n\t\t\t\t\t\t\treturn [false, \"That's a good move! However, as we'll see later, it's a good habit to keep your largest ship at your homeworld (for defense).\\n\\nTry moving one of the yellow ships.\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [true, \"Good job. End your turn and I'll show you something interesting...\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"That's legal, but I'd like you to discover a new star system instead.\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\t// oh dear\n\t\t\t\t\t// they may have discovered any kind of star...\n\t\t\t\t\tlet newStar = null;\n\t\t\t\t\tfor (let serial in oldState.map) {\n\t\t\t\t\t\tconst data = oldState.map[serial];\n\t\t\t\t\t\t// the new system should be number 5\n\t\t\t\t\t\tif (data && data.owner === null && data.at === 5) {\n\t\t\t\t\t\t\tnewStar = serial;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (newStar) {\n\t\t\t\t\t\t// If you discovered a medium, move move from the homeworld (which is y1A), otherwise move the existing y1B\n\t\t\t\t\t\tconst message = newStar[1] === \"2\" ? [\n\t\t\t\t\t\t\t\"Notice how the system is closer to your opponent's homeworld?\",\n\t\t\t\t\t\t\t\"That's because they are connected! Their home is a Small+Large, so it's connected to Medium systems (the only other size).\",\n\t\t\t\t\t\t\t\"(Note: The actual position of stars is ONLY a visual aid. The different-size rule is what matters.)\",\n\t\t\t\t\t\t] : null;\n\t\t\t\t\t\treturn [true, message, {\n\t\t\t\t\t\t\ttype: \"move\",\n\t\t\t\t\t\t\toldPiece: (newStar[1] === \"2\") ? \"y1A\" : \"y1B\",\n\t\t\t\t\t\t\tsystem: 5\n\t\t\t\t\t\t}];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"You forgot to discover a system, or else there is a bug. Please try again.\"];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\tendMessages: [\n\t\t\t\"Did you notice how the star system disappeared when it was abandoned? Stars get added to the map when a ship lands there, and go back to the Bank when the last ship leaves.\",\n\t\t\t\"It may seem weird at first, but it's actually a very crucial part of how the game works...\",\n\t\t],\n\t}),\n\n\t// Economic Intermission\n\tnew Tutorial({\n\t\ttitle: \"It's the Economy, Captain!\",\n\t\tdisableWarnings: true,\n\t\tstartMap: {\n\t\t\t\"b1A\": {\"at\": 3, \"owner\": \"enemy\"},\n\t\t\t\"b1B\": null,\n\t\t\t\"b1C\": {\"at\": 5, \"owner\": \"enemy\"},\n\t\t\t\"b2A\": {\"at\": 4, \"owner\": \"you\"},\n\t\t\t\"b2B\": {\"at\": 6, \"owner\": null},\n\t\t\t\"b2C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"b3A\": null,\n\t\t\t\"b3B\": {\"at\": 7, \"owner\": null},\n\t\t\t\"b3C\": {\"at\": 1, \"owner\": null},\n\n\t\t\t\"g1A\": {\"at\": 5, \"owner\": \"enemy\"},\n\t\t\t\"g1B\": {\"at\": 6, \"owner\": \"you\"},\n\t\t\t\"g1C\": {\"at\": 7, \"owner\": \"enemy\"},\n\t\t\t\"g2A\": {\"at\": 4, \"owner\": null},\n\t\t\t\"g2B\": {\"at\": 6, \"owner\": \"you\"},\n\t\t\t\"g2C\": null,\n\t\t\t\"g3A\": {\"at\": 3, \"owner\": null},\n\t\t\t\"g3B\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"g3C\": {\"at\": 1, \"owner\": \"you\"},\n\n\t\t\t\"r1A\": null,\n\t\t\t\"r1B\": {\"at\": 4, \"owner\": \"you\"},\n\t\t\t\"r1C\": {\"at\": 1, \"owner\": null},\n\t\t\t\"r2A\": null,\n\t\t\t\"r2B\": null,\n\t\t\t\"r2C\": null,\n\t\t\t\"r3A\": null,\n\t\t\t\"r3B\": null,\n\t\t\t\"r3C\": null,\n\n\t\t\t\"y1A\": null,\n\t\t\t\"y1B\": {\"at\": 1, \"owner\": \"you\"},\n\t\t\t\"y1C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"y2A\": null,\n\t\t\t\"y2B\": null,\n\t\t\t\"y2C\": null,\n\t\t\t\"y3A\": null,\n\t\t\t\"y3B\": null,\n\t\t\t\"y3C\": {\"at\": 5, \"owner\": null},\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Before we get to the last ability, I want to emphasize something I glossed over a while back.\",\n\t\t\t\t\t\"You see, Homeworlds is a war, but it's a very *economic* war.\",\n\t\t\t\t\t\"This is partially because of the limited supply of pieces in the Bank.\",\n\t\t\t\t\t\"A large part of success is about manipulating the available pieces to obtain more and bigger ships than your opponent.\",\n\t\t\t\t\t\"Here's a simple example of that. Build the small blue, and let's see what happens. (Or maybe you can predict...)\",\n\t\t\t\t],\n\t\t\t\tobjective: \"Build the last small blue OR pass your turn\",\n\t\t\t\thint: [\n\t\t\t\t\t\"If you're wondering how to \\\"pass your turn\\\": Just click End Turn before doing anything.\",\n\t\t\t\t\t\"This is usually disabled in tutorials but is perfectly legal and you can do it in this one.\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\t// originally this was an opening situation where you only had green\n\t\t\t\t\t// but... I'll allow any build as a pass move\n\t\t\t\t\tif (action.type !== \"build\") {\n\t\t\t\t\t\treturn [false, \"Not falling for it, eh? Or did you just mis-click? If you want, you can build the medium green instead and the opponent will take the small blue.\"];\n\t\t\t\t\t}\n\t\t\t\t\treturn [true];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.map.b1B === null) {\n\t\t\t\t\t\treturn [true, \"You know... let's do this from the other perspective. I'll have the opponent build the blue...\", {\n\t\t\t\t\t\t\ttype: \"build\",\n\t\t\t\t\t\t\tnewPiece: \"b1B\", // the only blue left\n\t\t\t\t\t\t\tsystem: 5,\n\t\t\t\t\t\t}];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [true, [\n\t\t\t\t\t\t\t\"So there's no more small blues in the Bank.\",\n\t\t\t\t\t\t\t\"The smallest blue piece is now a large...\",\n\t\t\t\t\t\t\t\"...and it's your opponent's turn...\",\n\t\t\t\t\t\t], {\n\t\t\t\t\t\t\ttype: \"build\",\n\t\t\t\t\t\t\tnewPiece: \"b3A\",\n\t\t\t\t\t\t\tsystem: 3,\n\t\t\t\t\t\t}];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tnextStep: function(oldState) {\n\t\t\t\t\t// If they build the B3, move to the end, otherwise move to the next step\n\t\t\t\t\treturn oldState.map.b3A ? 2 : 1;\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"See, there are no more small (or medium) blues in the Bank.\",\n\t\t\t\t\t\"So what does that mean about your build options?\",\n\t\t\t\t],\n\t\t\t\tobjective: \"Build a large blue\",\n\t\t\t\thint: \"OK, you're just obsessively clicking Hint. If you're curious, you can read the source code on GitHub (link on the homepage). The files are in the /scripts/tutorials folder.\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\t// I assume that if you know sacrifices you also know catastrophes\n\t\t\t\t\tif (action.type !== \"build\" || action.newPiece !== \"b3A\") {\n\t\t\t\t\t\treturn [false, \"Come on, there's a large blue waiting for you!\"];\n\t\t\t\t\t}\n\t\t\t\t\treturn [true];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"This time, let's actually get that medium green.\"];\n\t\t\t\t\t}\n\t\t\t\t\t// Either trade for red or build a green\n\t\t\t\t\tconst action = (oldState.map.r1A ? {\n\t\t\t\t\t\ttype: \"build\",\n\t\t\t\t\t\tnewPiece: \"g2C\",\n\t\t\t\t\t\tsystem: 2,\n\t\t\t\t\t} : {\n\t\t\t\t\t\ttype: \"trade\",\n\t\t\t\t\t\toldPiece: \"b1B\",\n\t\t\t\t\t\tnewPiece: \"r1A\",\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn [true, [\n\t\t\t\t\t\t\"Great. You're now in the lead on large ships!\",\n\t\t\t\t\t\t\"You now would have a solid advantage. The enemy still has only their initial large ship.\",\n\t\t\t\t\t], {\n\t\t\t\t\t\ttype: \"trade\",\n\t\t\t\t\t\toldPiece: \"b1B\",\n\t\t\t\t\t\tnewPiece: \"r1A\",\n\t\t\t\t\t}];\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\tendMessages: [\n\t\t\t\"Yep! One side got a small ship, the other got a large. That's just one example of how tricky the economy can be in Homeworlds.\",\n\t\t\t\"It's important to watch the Bank. If you're taking the last ship of a size, that often opens up the next size to your opponent.\",\n\t\t\t\"The extreme example is being \\\"frozen out\\\" of a color, unable to build OR trade for it, because your enemy has all the pieces.\",\n\t\t\t\"So as you play, keep thinking: am I giving the opponent more opportunities to get bigger ships than me?\",\n\t\t\t\"Now, exactly why are bigger ships more important? Because of the last color, red...\",\n\t\t],\n\t}),\n\n\t// Capturing\n\tnew Tutorial({\n\t\ttitle: \"Offense and Defense\",\n\t\tdisableWarnings: true,\n\t\tstartMap: {\n\t\t\t\"b1A\": {\"at\": 5, \"owner\": \"enemy\"},\n\t\t\t\"b1B\": {\"at\": 4, \"owner\": \"you\"},\n\t\t\t\"b1C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"b2A\": null,\n\t\t\t\"b2B\": {\"at\": 5, \"owner\": \"enemy\"},\n\t\t\t\"b2C\": {\"at\": 1, \"owner\": null},\n\t\t\t\"b3A\": null,\n\t\t\t\"b3B\": null,\n\t\t\t\"b3C\": null,\n\n\t\t\t\"g1A\": null,\n\t\t\t\"g1B\": null,\n\t\t\t\"g1C\": null,\n\t\t\t\"g2A\": {\"at\": 1, \"owner\": \"you\"},\n\t\t\t\"g2B\": {\"at\": 5, \"owner\": null},\n\t\t\t\"g2C\": {\"at\": 3, \"owner\": null},\n\t\t\t\"g3A\": {\"at\": 4, \"owner\": null},\n\t\t\t\"g3B\": {\"at\": 2, \"owner\": null},\n\t\t\t\"g3C\": {\"at\": 1, \"owner\": \"you\"},\n\n\t\t\t\"r1A\": {\"at\": 5, \"owner\": \"enemy\"},\n\t\t\t\"r1B\": {\"at\": 4, \"owner\": \"you\"},\n\t\t\t\"r1C\": {\"at\": 1, \"owner\": null},\n\t\t\t\"r2A\": {\"at\": 4, \"owner\": \"enemy\"},\n\t\t\t\"r2B\": null,\n\t\t\t\"r2C\": null,\n\t\t\t\"r3A\": null,\n\t\t\t\"r3B\": {\"at\": 7, \"owner\": \"you\"},\n\t\t\t\"r3C\": {\"at\": 2, \"owner\": \"enemy\"},\n\n\t\t\t\"y1A\": null,\n\t\t\t\"y1B\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"y1C\": {\"at\": 1, \"owner\": \"you\"},\n\t\t\t\"y2A\": {\"at\": 5, \"owner\": \"enemy\"},\n\t\t\t\"y2B\": {\"at\": 4, \"owner\": \"you\"},\n\t\t\t\"y2C\": {\"at\": 3, \"owner\": \"enemy\"},\n\t\t\t\"y3A\": null,\n\t\t\t\"y3B\": null,\n\t\t\t\"y3C\": {\"at\": 7, \"owner\": null},\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"OK, time for the last ability.\",\n\t\t\t\t\t\"Red is the color of defense. Its ability is probably the least commonly used one in the game, but it's just as important as the other three.\",\n\t\t\t\t\t\"Red gives you the ability to capture (i.e. steal) enemy ships. But it only works at short range (i.e. in the same system).\",\n\t\t\t\t\t\"To use red, you click on an enemy ship. If you have an equal or larger ship, and you have red technology, you can capture it, and it becomes yours.\",\n\t\t\t\t\t\"Note that on this website I've arranged the ships and stars so yours are on the right side, almost like cars on a highway (in the US). You may notice things move around unexpectedly; this is because of changing ownership.\",\n\t\t\t\t\t\"Here, your opponent has moved a ship to one of your colonies. It seems they forgot that their turn is now over, so YOU get to strike first! Steal that invader ship!\",\n\t\t\t\t\t\"(Note: Capturing takes control of an enemy ship, so it becomes yours. You do NOT destroy ships, at least not with Red.)\"\n\t\t\t\t],\n\t\t\t\thint: [\n\t\t\t\t\t\"There's a lot more going on here, so don't panic. What ship doesn't belong? That's the one you want to capture.\",\n\t\t\t\t\t\"Click on it, then click \\\"Capture this ship\\\".\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"steal\") {\n\t\t\t\t\t\treturn [true, [\n\t\t\t\t\t\t\t\"There you go. That'll teach them to be smarter about invasions...\",\n\t\t\t\t\t\t]];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"That's fine but we have an invader! You need to capture them before they steal your ships!\"]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"Don't end your turn yet, you haven't done anything!\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn [true, null, {\n\t\t\t\t\t\ttype: \"build\",\n\t\t\t\t\t\tnewPiece: \"r2C\",\n\t\t\t\t\t\tsystem: 2,\n\t\t\t\t\t}];\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"That raises an important point I want to emphasize.\",\n\t\t\t\t\t\"You could steal the medium red because (1) you had a medium AND (2) you had red technology (from your small red).\",\n\t\t\t\t\t\"Your ships can borrow each other's technology to perform actions, IF they are at the same system. (Similarly, your blue could have moved, or your yellow could have changed color, if you wanted.)\",\n\t\t\t\t\t\"You can also use the star's technology. You *cannot*, however, borrow technology from enemy ships. Either you capture the ship itself (and you can use it next turn) or you can't use it.\",\n\t\t\t\t\t\"Usually you haven't had to worry about this because of how I set up the map, but that's important to note for the Real Thing.\",\n\t\t\t\t\t\"Anyway...\",\n\t\t\t\t\t\"Let's do some raiding, the smart way. If you move a ship in that is BIGGER than all the enemy ships, they can't fight back!\",\n\t\t\t\t\t\"See those four ships at the one system? Let's invade with a stronger ship...\",\n\t\t\t\t],\n\t\t\t\thint: [\n\t\t\t\t\t\"You have five ships that can move to two different enemy colonies. But only one of your ships is stronger than the enemy fleet...\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"move\") {\n\t\t\t\t\t\tif (action.system === 3) {\n\t\t\t\t\t\t\t// 3 only has a yellow\n\t\t\t\t\t\t\treturn [false, \"If you move there, the Y2 (i.e. medium yellow) can just move away. Move somewhere with more ships.\"];\n\t\t\t\t\t\t} else if (action.system !== 5) {\n\t\t\t\t\t\t\t// where are you going?\n\t\t\t\t\t\t\treturn [false, \"Where are you going? Invade the enemy now!\"];\n\t\t\t\t\t\t} else if (action.oldPiece !== \"r3B\") {\n\t\t\t\t\t\t\t// ok at this point we are going to system 5\n\t\t\t\t\t\t\treturn [false, \"That ship isn't strong enough! They'll just capture you right away...\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [true, \"Resistance Is Futile!\\n\\n...right?\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// not a move action\n\t\t\t\t\t\treturn [false, \"That doesn't look like a move to me...\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"You haven't done anything yet.\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn [\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\"It's their turn now, but they can't fight you. They can only move out one ship... right?\",\n\t\t\t\t\t\t// first action\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"sacrifice\",\n\t\t\t\t\t\t\toldPiece: \"y2A\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"discover\",\n\t\t\t\t\t\t\toldPiece: \"b2B\",\n\t\t\t\t\t\t\tnewPiece: \"g1A\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"move\",\n\t\t\t\t\t\t\toldPiece: \"r1A\",\n\t\t\t\t\t\t\tsystem: 8, // the newly discovered one\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"What in the galaxy was THAT?\",\n\t\t\t\t\t\"That's something for a new module... BUT, I wanted to give you the chance to capture that last ship first, if you want to.\",\n\t\t\t\t\t\"Do *whatever you want* (or nothing) this turn, then we'll start the next module after you End Turn.\"\n\t\t\t\t],\n\t\t\t\thint: [\n\t\t\t\t\t\"Did you sacrifice and get stuck?\",\n\t\t\t\t\t\"There's always Reset Turn, or you can End Turn and learn about sacrifices next module.\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"catastrophe\") {\n\t\t\t\t\t\treturn [true, \"I see you've found out about the catastrophe action...\"];\n\t\t\t\t\t}\n\t\t\t\t\treturn [true];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function() {\n\t\t\t\t\treturn [true];\n\t\t\t\t}\n\t\t\t},\n\t\t],\n\t\tendMessages: [\n\t\t\t\"Now let's learn about what they just did to you...\",\n\t\t\t\"It's that pesky sacrifice action that I've been stopping you from doing all this time.\",\n\t\t],\n\t}),\n\t\n\t// Sacrifices\n\tnew Tutorial({\n\t\ttitle: \"Sometimes You Have to Make Sacrifices\",\n\t\tdisableWarnings: true,\n\t\tstartMap: {\n\t\t\t\"b1A\": null,\n\t\t\t\"b1B\": null,\n\t\t\t\"b1C\": {\"at\": 6, \"owner\": null},\n\t\t\t\"b2A\": null,\n\t\t\t\"b2B\": null,\n\t\t\t\"b2C\": {\"at\": 1, \"owner\": null},\n\t\t\t\"b3A\": null,\n\t\t\t\"b3B\": {\"at\": 5, \"owner\": null},\n\t\t\t\"b3C\": {\"at\": 2, \"owner\": null},\n\n\t\t\t\"g1A\": null,\n\t\t\t\"g1B\": null,\n\t\t\t\"g1C\": {\"at\": 4, \"owner\": null},\n\t\t\t\"g2A\": null,\n\t\t\t\"g2B\": null,\n\t\t\t\"g2C\": null,\n\t\t\t\"g3A\": {\"at\": 3, \"owner\": null},\n\t\t\t\"g3B\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"g3C\": {\"at\": 1, \"owner\": \"you\"},\n\n\t\t\t\"r1A\": null,\n\t\t\t\"r1B\": null,\n\t\t\t\"r1C\": {\"at\": 1, \"owner\": null},\n\t\t\t\"r2A\": null,\n\t\t\t\"r2B\": null,\n\t\t\t\"r2C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"r3A\": null,\n\t\t\t\"r3B\": null,\n\t\t\t\"r3C\": null,\n\n\t\t\t\"y1A\": {\"at\": 5, \"owner\": \"you\"},\n\t\t\t\"y1B\": {\"at\": 4, \"owner\": \"enemy\"},\n\t\t\t\"y1C\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"y2A\": {\"at\": 6, \"owner\": \"enemy\"},\n\t\t\t\"y2B\": {\"at\": 1, \"owner\": \"you\"},\n\t\t\t\"y2C\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"y3A\": null,\n\t\t\t\"y3B\": null,\n\t\t\t\"y3C\": null,\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"So normally, you can only do one action per turn, and you need access to a color to do any action (e.g. to build, you must have a green ship there or be at a green star).\",\n\t\t\t\t\t\"But there's another option: You can sacrifice any one of your ships. You then get several actions of the ship's type, with the number depending on the size, that you can use ANYWHERE you still have a ship.\",\n\t\t\t\t\t\"What? OK: If you sacrifice a Small, you get 1 action; a Medium, 2; and a Large, 3.\\n(This is the explanation for those pips you've seen on the ships.)\",\n\t\t\t\t\t\"The type of actions correspond to the ship's color: sacrificing a yellow gives you move/discover actions, a green gives builds, etc.\",\n\t\t\t\t\t\"And you can do those actions ANYWHERE you still have a ship, even if you otherwise don't have technology there.\\nIt's like a long-range signal booster that gives you technology, but is so powerful it destroys the ship.\",\n\t\t\t\t\t\"Here's a rather common opening situation. Goal: Build all three large yellows at once!\",\n\t\t\t\t],\n\t\t\t\thint: [\n\t\t\t\t\t\"Normally, you can only build one ship per turn. How do you build 3 things in one turn?\",\n\t\t\t\t\t\"(There's also the Show Intro button if you want to refresh your memory.)\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"sacrifice\") {\n\t\t\t\t\t\tif (action.oldPiece === \"g3C\") {\n\t\t\t\t\t\t\treturn [true, \"Good. Now you can do 3 build actions: 3 because it was a large, and build actions because it was green.\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"Nice try, but sacrificing a yellow gives you *move* actions, and you want to build.\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (action.type === \"build\") {\n\t\t\t\t\t\tif (oldState.actions.sacrifice) {\n\t\t\t\t\t\t\t// sacrifice then build\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// give some helpful notices if they look like they have a misconception\n\t\t\t\t\t\t\tconst at1 = oldState.getAllPiecesAtSystem(1).length;\n\t\t\t\t\t\t\tconst at3 = oldState.getAllPiecesAtSystem(3).length;\n\t\t\t\t\t\t\tconsole.log(at1, at3);\n\t\t\t\t\t\t\t// these include the star(s)\n\t\t\t\t\t\t\tif (at1 === 4 && action.system === 1) {\n\t\t\t\t\t\t\t\t// you're building twice at the homeworld\n\t\t\t\t\t\t\t\treturn [true, \"Just saying, you don't *have* to build all your new ships where you sacrificed. You have build power EVERYWHERE you have a ship. That's the power of sacrifices!\"];\n\t\t\t\t\t\t\t} else if (at3 === 3 && action.system === 3) {\n\t\t\t\t\t\t\t\treturn [true, \"Just saying, you don't *have* to build at green systems when you sacrifice. The sacrifice gives you build power EVERYWHERE you have a ship!\"];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// no comment\n\t\t\t\t\t\t\t\treturn [true];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn [true];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"If you just build now, your turn will be over. Sacrifice something first!\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"While you don't *have* to use all your actions (sometimes you can't), here you should.\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// enemy move\n\t\t\t\t\t// see if they can exploit catastrophes\n\t\t\t\t\tlet systemsToCheck = [1, 3, 5];\n\t\t\t\t\tfor (let i = 0; i < systemsToCheck.length; i++) {\n\t\t\t\t\t\tconst system = systemsToCheck[i];\n\t\t\t\t\t\t// only one system can have 3+ ships\n\t\t\t\t\t\t// system #1 is the homeworld, which has 2 stars\n\t\t\t\t\t\tconst ships = oldState.getAllPiecesAtSystem(system).length - (system === 1 ? 2 : 1);\n\t\t\t\t\t\tif (ships === 4) {\n\t\t\t\t\t\t\treturn [true, [\n\t\t\t\t\t\t\t\t\"I see you've built all your ships at the same system. You don't have to do that; in fact, you could have built one ship in every system if you wanted.\",\n\t\t\t\t\t\t\t\t\"Anyway, though, you now have 3 large ships! What could *possibly* go wrong?!\"\n\t\t\t\t\t\t\t], {\n\t\t\t\t\t\t\t\t// you have 4 ships, just immediately catastrophe\n\t\t\t\t\t\t\t\ttype: \"catastrophe\",\n\t\t\t\t\t\t\t\tsystem: system,\n\t\t\t\t\t\t\t}];\n\t\t\t\t\t\t} else if (ships === 3) {\n\t\t\t\t\t\t\tconst enemyActions = (system === 1) ? [\n\t\t\t\t\t\t\t\t// sacrifice y2A for two moves\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: \"sacrifice\",\n\t\t\t\t\t\t\t\t\toldPiece: \"y2A\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t// move to your homeworld\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: \"move\",\n\t\t\t\t\t\t\t\t\toldPiece: \"y1B\",\n\t\t\t\t\t\t\t\t\tsystem: 5,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: \"move\",\n\t\t\t\t\t\t\t\t\toldPiece: \"y1B\",\n\t\t\t\t\t\t\t\t\tsystem: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t// now blow up your 3 yellows\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: \"catastrophe\",\n\t\t\t\t\t\t\t\t\tsystem: 1,\n\t\t\t\t\t\t\t\t\tcolor: 'y'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t] : [\n\t\t\t\t\t\t\t\t// not at your homeworld so do a simple move\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: \"move\",\n\t\t\t\t\t\t\t\t\toldPiece: \"y1B\",\n\t\t\t\t\t\t\t\t\tsystem: system,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: \"catastrophe\",\n\t\t\t\t\t\t\t\t\tsystem: system,\n\t\t\t\t\t\t\t\t\tcolor: 'y',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\treturn [true, \"Yay! You now have 3 large ships, and there's no more yellow for your opponent to build! What could *possibly* go wrong?\"].concat(enemyActions);\n\t\t\t\t\t\t}\n\t\t\t\t\t} // end for\n\t\t\t\t\t// No system has 3+ pieces.\n\t\t\t\t\t// Do a catastrophe anyway!\n\t\t\t\t\treturn [\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"That's actually what I would have done in the game, building one piece at each system.\",\n\t\t\t\t\t\t\t\"You now have 3 large ships to the opponent's 1, and they can't build any more yellow! What could *possibly* go wrong?\",\n\t\t\t\t\t\t], \n\t\t\t\t\t\t// sacrifice Y2 for 2 moves\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"sacrifice\",\n\t\t\t\t\t\t\toldPiece: \"y2C\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"move\",\n\t\t\t\t\t\t\toldPiece: \"y2A\",\n\t\t\t\t\t\t\tsystem: 3,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"move\",\n\t\t\t\t\t\t\toldPiece: \"y1B\",\n\t\t\t\t\t\t\tsystem: 3,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"catastrophe\",\n\t\t\t\t\t\t\tsystem: 3,\n\t\t\t\t\t\t\tcolor: 'y'\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t}, // end checkEndTurn\n\t\t\t} // end step\n\t\t], // end steps array\n\t\tendMessages: [\n\t\t\t\"What? How did they destroy your ships?\",\n\t\t\t\"Something about concentrations of color, apparently... well, time for the next module!\",\n\t\t\t\"By the way, I just wanted to clarify something before we go: You can only sacrifice one piece per turn.\",\n\t\t\t\"So even if you sacrifice, you might get multiple moves (if yellow) OR multiple captures (if red), but you do NOT get both in the same turn.\",\n\t\t\t\"All right, let's learn about catastrophes! I promise, we're done with these surprises.\",\n\t\t],\n\t}),\n\t\n\t// Catastrophes\n\tnew Tutorial({\n\t\ttitle: \"Catastrophe!\",\n\t\tdisableWarnings: true,\n\t\tstartMap: {\n\t\t\t\"b1A\": null,\n\t\t\t\"b1B\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"b1C\": {\"at\": 4, \"owner\": null},\n\t\t\t\"b2A\": {\"at\": 6, \"owner\": \"enemy\"},\n\t\t\t\"b2B\": {\"at\": 9, \"owner\": \"you\"},\n\t\t\t\"b2C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"b3A\": null,\n\t\t\t\"b3B\": {\"at\": 6, \"owner\": null},\n\t\t\t\"b3C\": {\"at\": 1, \"owner\": null},\n\n\t\t\t\"g1A\": {\"at\": 4, \"owner\": \"you\"},\n\t\t\t\"g1B\": {\"at\": 6, \"owner\": \"enemy\"},\n\t\t\t\"g1C\": {\"at\": 3, \"owner\": null},\n\t\t\t\"g2A\": null,\n\t\t\t\"g2B\": {\"at\": 4, \"owner\": \"you\"},\n\t\t\t\"g2C\": null,\n\t\t\t\"g3A\": null,\n\t\t\t\"g3B\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"g3C\": {\"at\": 1, \"owner\": \"you\"},\n\n\t\t\t\"r1A\": {\"at\": 1, \"owner\": \"you\"},\n\t\t\t\"r1B\": {\"at\": 6, \"owner\": \"enemy\"},\n\t\t\t\"r1C\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"r2A\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"r2B\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"r2C\": null,\n\t\t\t\"r3A\": {\"at\": 3, \"owner\": \"enemy\"},\n\t\t\t\"r3B\": null,\n\t\t\t\"r3C\": {\"at\": 6, \"owner\": \"enemy\"},\n\n\t\t\t\"y1A\": {\"at\": 9, \"owner\": null},\n\t\t\t\"y1B\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"y1C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"y2A\": null,\n\t\t\t\"y2B\": {\"at\": 4, \"owner\": \"you\"},\n\t\t\t\"y2C\": {\"at\": 1, \"owner\": null},\n\t\t\t\"y3A\": null,\n\t\t\t\"y3B\": null,\n\t\t\t\"y3C\": null,\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"So what I didn't tell you about these four technologies was that they are somewhat unstable.\",\n\t\t\t\t\t\"In fact, if you ever have 4 pieces (ships or stars) of the *same color* in the same system, that is called an Overpopulation.\",\n\t\t\t\t\t\"And, on your turn, if there is an Overpopulated system, you have the option to invoke a Catastrophe, destroying all pieces of the Overpopulated color!\",\n\t\t\t\t\t\"Let's see this in action. Your opponent just invaded one of your colonies, and you can't fight back. But there are 3 red pieces there, 1 shy of a catastrophe...\",\n\t\t\t\t],\n\t\t\t\thint: [\n\t\t\t\t\t\"You need 4 pieces of the same color (here, red) to make a catastrophe.\",\n\t\t\t\t\t\"There are 3 reds at one of your systems. You'll need to figure out how to add a 4th.\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\t// there are several promising tries\n\t\t\t\t\tif (action.type === \"sacrifice\") {\n\t\t\t\t\t\tif (action.oldPiece[0] === \"y\") {\n\t\t\t\t\t\t\treturn [false, \"Trying to escape, eh? Interesting strategy, but here you can actually destroy the invader if you can create a catastrophe.\"];\n\t\t\t\t\t\t} else if (action.oldPiece === \"b1B\") {\n\t\t\t\t\t\t\treturn [false, \"Were you hoping to trade that small blue (and clicked sacrifice by mistake)? If so, good thinking, but I don't see a small red in the Bank.\"];\n\t\t\t\t\t\t} else if (action.oldPiece === \"b2B\") {\n\t\t\t\t\t\t\treturn [false, [\n\t\t\t\t\t\t\t\t\"Oh neat! I assume you're trying to trade out your red (in your homeworld), then trade the small blue for it?\",\n\t\t\t\t\t\t\t\t\"That's really clever. Unfortunately, I can't let you do that here because you need those blue ships for the next turn...\",\n\t\t\t\t\t\t\t\t\"But there *is* another clever way to make a nice profit off of this turn.\"\n\t\t\t\t\t\t\t]];\n\t\t\t\t\t\t} else if (action.oldPiece === \"g3C\" || action.oldPiece === \"g2B\") {\n\t\t\t\t\t\t\treturn [true]; // hold our breath\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"Hmmm... I'm not sure what sacrificing *that* piece would do. Perhaps you mis-clicked?\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (action.type === \"build\") {\n\t\t\t\t\t\t// Build.\n\t\t\t\t\t\t// Give no message unless \n\t\t\t\t\t\tif (action.newPiece[0] === 'r' && action.system === 3) {\n\t\t\t\t\t\t\treturn [true, \"Now that there are 4 reds, you still have to manually declare the catastrophe. Click any one of the four red ships, then click the catastrophe button (it's the last one).\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [true]; // no comment\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (action.type === \"trade\") {\n\t\t\t\t\t\treturn [false, \"I'm not sure how that helps you... Try again.\"];\n\t\t\t\t\t} else if (action.type === \"move\") {\n\t\t\t\t\t\tif (action.oldPiece === \"r1A\") {\n\t\t\t\t\t\t\tif (action.system === 3) {\n\t\t\t\t\t\t\t\treturn [true, [\n\t\t\t\t\t\t\t\t\t\"I'll let that go, but notice that when you do the catastrophe you will be totally out of red.\",\n\t\t\t\t\t\t\t\t\t\"Now that there are 4 reds, you still have to manually declare the catastrophe. Click any one of the four red ships, then click the catastrophe button (it's the last one).\",\n\t\t\t\t\t\t\t\t]];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn [true, \"Whoops, looks like you clicked the wrong system by mistake. Why don't you try out that Reset Turn button? That is designed to save you from these mistakes in a real game.\"];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (action.type === \"catastrophe\") {\n\t\t\t\t\t\t\treturn [true, \"There. Notice how your blue is still there? In a ship catastrophe, only the involved ships are destroyed.\\n(The star would, of course, disappear if those were the ONLY ships there and the star became abandoned.)\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [true];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\t// what I care about is that you destroyed the r3\n\t\t\t\t\tif (oldState.map[\"r3A\"]) {\n\t\t\t\t\t\tif (oldState.isSystemOverpopulated('r', 3)) {\n\t\t\t\t\t\t\treturn [false, \"Oh right. You actually have to invoke the catastrophe for it to happen. Click one of the overpopulated red ships, then click the catastrophe button.\"];\n\t\t\t\t\t\t} else if (oldState.actions.number > 0) {\n\t\t\t\t\t\t\treturn [false, \"Hmmm... It looks like you aren't quite finished. Don't end your turn just yet. (Perhaps you meant to reset?)\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"Hmmm... It looks like you had a plan, but it didn't work out. That's why we have a Reset Turn button!\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst action = {\n\t\t\t\t\t\t\ttype: \"build\",\n\t\t\t\t\t\t\tnewPiece: oldState.getPieceInStashByType(\"g2\"),\n\t\t\t\t\t\t\tsystem: 6,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (oldState.map[\"r3B\"]) {\n\t\t\t\t\t\t\t// you managed to build the other red\n\t\t\t\t\t\t\treturn [true, \"Great! You even managed to build the large before declaring the catastrophe!\", action];\n\t\t\t\t\t\t} else if (oldState.map[\"r1A\"]) {\n\t\t\t\t\t\t\treturn [true, \"Good. Now, there was a better way to do it; if you want to find it, come back to this tutorial.\\n\\nLet's move on.\", action];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"So you took out their large ship, but you lost three of your own.\",\n\t\t\t\t\t\"But other times you can devastate your opponent for a relatively small price. Your opponent foolishly built another green at that one blue star.\",\n\t\t\t\t\t\"You see, sometimes the star itself is part of the overpopulation. In that case, the ENTIRE system is destroyed and returned to the Bank.\",\n\t\t\t\t\t\"Let's totally destroy their system!\",\n\t\t\t\t],\n\t\t\t\tobjective: \"Cause a blue catastrophe\",\n\t\t\t\thint: [\n\t\t\t\t\t\"How many blue pieces are in that system (#6)? You need there to be 4.\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"sacrifice\") {\n\t\t\t\t\t\tif (action.oldPiece === \"y2B\") {\n\t\t\t\t\t\t\treturn [true]; // no comment\n\t\t\t\t\t\t} else if (action.oldPiece === \"g1A\") {\n\t\t\t\t\t\t\treturn [false, \"Did you mis-click? You sacrificed the small green.\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst type = {\n\t\t\t\t\t\t\t\t'b': \"trade\",\n\t\t\t\t\t\t\t\t'g': \"build\",\n\t\t\t\t\t\t\t\t'r': \"capture\",\n\t\t\t\t\t\t\t}[action.oldPiece[0]];\n\t\t\t\t\t\t\treturn [false, \"Sacrificing that ship would get you \" + type + \" actions. But how is that going to move ships into an enemy system?\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (action.type === \"move\") {\n\t\t\t\t\t\tif (oldState.actions.sacrifice) {\n\t\t\t\t\t\t\t// make sure they move a blue to #6\n\t\t\t\t\t\t\tif (action.oldPiece[0] === \"r\") {\n\t\t\t\t\t\t\t\treturn [false, \"Are you trying to cause a red catastrophe? You don't have enough moves for that. Let's blow up the star itself!\"];\n\t\t\t\t\t\t\t} else if (action.oldPiece[0] !== \"b\") {\n\t\t\t\t\t\t\t\treturn [false, \"What color is the star? Move *that* color in...\"];\n\t\t\t\t\t\t\t} else if (action.system !== 6) {\n\t\t\t\t\t\t\t\treturn [false, \"Where are you going? Let's move directly into the blue star system!\"];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn [true];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"...and then your turn would end with only 3 blues in the system.\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (action.type === \"catastrophe\") {\n\t\t\t\t\t\treturn [true, [\n\t\t\t\t\t\t\t\"There you go! BOOM, the whole thing explodes!\",\n\t\t\t\t\t\t\t\"They only have 3 ships left! At the beginning you were well behind, with only 1 large ship against 3. Now you've set them way back.\",\n\t\t\t\t\t\t]];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"Hmmm... that doesn't look like an invasion to me.\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.map.b3B) {\n\t\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\t\treturn [false, \"Whoops, looks like you tried to end your turn. You aren't done yet!\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"It looks like you had a plan that didn't work. That's what the Reset Turn is for!\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [true];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tendMessages: [\n\t\t\t\"Well done. You've destroyed six enemy ships, two large.\",\n\t\t\t\"You've actually gotten through all the basic actions. There's one last thing left: setting up your homeworld.\",\n\t\t],\n\t}),\n\t\n\t// Homeworld Setup\n\tnew Tutorial({\n\t\ttitle: \"Your Homeworld\",\n\t\tdisableWarnings: true,\n\t\tstartMap: {\n\t\t\tb1A: null,\n\t\t\tb1B: null,\n\t\t\tb1C: null,\n\t\t\tb2A: null,\n\t\t\tb2B: null,\n\t\t\tb2C: null,\n\t\t\tb3A: null,\n\t\t\tb3B: null,\n\t\t\tb3C: null,\n\t\t\t\n\t\t\tg1A: null,\n\t\t\tg1B: null,\n\t\t\tg1C: null,\n\t\t\tg2A: null,\n\t\t\tg2B: null,\n\t\t\tg2C: null,\n\t\t\tg3A: null,\n\t\t\tg3B: null,\n\t\t\tg3C: null,\n\t\t\t\n\t\t\tr1A: null,\n\t\t\tr1B: null,\n\t\t\tr1C: null,\n\t\t\tr2A: null,\n\t\t\tr2B: null,\n\t\t\tr2C: null,\n\t\t\tr3A: null,\n\t\t\tr3B: null,\n\t\t\tr3C: null,\n\t\t\t\n\t\t\ty1A: null,\n\t\t\ty1B: null,\n\t\t\ty1C: null,\n\t\t\ty2A: null,\n\t\t\ty2B: null,\n\t\t\ty2C: null,\n\t\t\ty3A: null,\n\t\t\ty3B: null,\n\t\t\ty3C: null,\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"I've saved the first decision of the game for last, because it's the most important.\",\n\t\t\t\t\t\"At the *very beginning* of the game, you need to pick two stars and one ship for your homeworld.\",\n\t\t\t\t\t\"There are a lot of factors involved. Which sizes do you pick for your stars? Which colors?\",\n\t\t\t\t\t\"So instead of a big lecture right at the start, I'll let you set up any homeworld you want. Click your two stars first, then your ship.\",\n\t\t\t\t\t\"After you pick it, I'll evaluate it. You can even deliberately pick bad homeworlds to see what happens.\",\n\t\t\t\t],\n\t\t\t\thint: [\n\t\t\t\t\t\"Just experiment. Pick something random, reset turn, pick something else, etc until you are comfortable.\",\n\t\t\t\t],\n\t\t\t\t// hmmm oldState is kind of useless\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tlet techFeedback = [\"Your choice of abilities:\"],\n\t\t\t\t\t    shipFeedback = [\"Your choice of ship:\"],\n\t\t\t\t\t    starFeedback = [\"Your choice of stars:\"];\n\t\t\t\t\t\n\t\t\t\t\tconst pieces = [action.star1, action.star2, action.ship];\n\t\t\t\t\tconst colorUse = {'b': 0, 'g': 0, 'r': 0, 'y': 0};\n\t\t\t\t\tlet duplicate = null;\n\t\t\t\t\tlet success = true;\n\t\t\t\t\tfor (let i = 0; i < pieces.length; i++) {\n\t\t\t\t\t\t// increment the bin for its first character i.e. color\n\t\t\t\t\t\tconst color = pieces[i][0];\n\t\t\t\t\t\tcolorUse[color]++;\n\t\t\t\t\t\tif (colorUse[color] >= 2) {\n\t\t\t\t\t\t\tduplicate = color;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// General feedback (about your technologies)\n\t\t\t\t\tif (duplicate) {\n\t\t\t\t\t\ttechFeedback.push(\"You have picked a duplicate color. This means you have fewer abilities, so the opening will probably be a bit harder.\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (colorUse['g'] === 0) {\n\t\t\t\t\t\ttechFeedback.push(\"You didn't pick any green! Now you won't be able to build any new ships.\");\n\t\t\t\t\t\tif (colorUse['b'] === 0) {\n\t\t\t\t\t\t\ttechFeedback.push(\"You don't have blue either! Now you can't even trade for green. Fortunately this is \");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (colorUse['b'] === 0) {\n\t\t\t\t\t\ttechFeedback.push(\"You didn't pick any blue! You'll have a harder time getting the other three colors.\");\n\t\t\t\t\t\tif (colorUse['y'] === 0) {\n\t\t\t\t\t\t\ttechFeedback.push(\"...and no yellow either! You won't be able to trade for yellow, so you can't escape your homeworld. You are stuck!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (colorUse['y'] > 0) {\n\t\t\t\t\t\t// you DO have yellow\n\t\t\t\t\t\ttechFeedback.push(\"You picked G+B+Y. Good, solid opening. You can move out of your homeworld quickly. You will have to eventually get red, and probably keep one at your homeworld.\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// you must have green+blue+red\n\t\t\t\t\t\ttechFeedback.push(\"You picked G+B+R. Good, solid opening. You don't have yellow, but you can trade for it after you build a ship. Your homeworld has built-in defenses against enemy invasions.\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Feedback about your ship\n\t\t\t\t\tif (action.ship[1] !== \"3\") {\n\t\t\t\t\t\tshipFeedback.push(\"You didn't take a large ship. If you don't have a large, and your opponent gets their own large in, you won't be able to fight back!\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (action.ship[0] === \"g\") {\n\t\t\t\t\t\tshipFeedback.push(\"You picked a green ship. This is what most of the experienced players do. If the situation is right you may be able to sacrifice it later to build several mediums and larges. Of course, be careful of catastrophes.\");\n\t\t\t\t\t} else if (action.ship[0] === \"y\") {\n\t\t\t\t\t\tshipFeedback.push(\"You picked a yellow ship. This is okay, and you often need a large yellow to sacrifice to wipe out a star. But if it's the only large at your homeworld, using it this way becomes risky.\");\n\t\t\t\t\t} else if (action.ship[0] === \"r\") {\n\t\t\t\t\t\tshipFeedback.push(\"You picked a red ship. Having a large red is good (see the Advanced Direct Assault module for why), but it's less effective if it is the only large at your homeworld.\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshipFeedback.push(\"You picked a blue ship. Blue is good because you can trade for anything even after you leave your homeworld. However, most players use a blue star instead.\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Feedback about your stars\n\t\t\t\t\tlet sizesConnected = [];\n\t\t\t\t\tfor (let s = 1; s <= 3; s++) {\n\t\t\t\t\t\t// [1] is the size in b2C\n\t\t\t\t\t\t// if it's not equal to s, add it to the array\n\t\t\t\t\t\tif (action.star1[1] !== String(s) && action.star2[1] !== String(s)) {\n\t\t\t\t\t\t\tsizesConnected.push(s);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (sizesConnected.length === 1) {\n\t\t\t\t\t\tconst missingSize = sizesConnected[0];\n\t\t\t\t\t\tif (missingSize === 1) {\n\t\t\t\t\t\t\tstarFeedback.push(\"You picked a Medium+Large homeworld, also known as a Fortress. This is because Small pieces tend to get used up quickly as ships, so later on it is harder to invade your homeworld.\");\n\t\t\t\t\t\t} else if (missingSize === 2) {\n\t\t\t\t\t\t\tstarFeedback.push(\"You picked a Small+Large homeworld, also known as a Goldilocks. In the opening there are usually more Mediums available than any other size, so you can often get 2 or even 3 green colonies.\");\n\t\t\t\t\t\t} else if (missingSize === 3) {\n\t\t\t\t\t\t\tstarFeedback.push(\"You picked a Small+Medium homeworld, also known as a Banker. This makes it slightly easier to pull off the Investment strategy that I cover later on. Some people say this is the strongest homeworld.\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstarFeedback.push(\"...something weird happened. This is almost certainly a bug.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// convert numbers into words\n\t\t\t\t\t\tconst sizeNames = sizesConnected.map((size) => [\"\", \"Small\", \"Medium\", \"Large\"][size]);\n\t\t\t\t\t\tstarFeedback.push(\"You picked a homeworld with two same-size stars. This is called a Gemini. Now, you are connected to both \" + sizeNames.join(\" and \") + \" systems. This can make it easier for your opponent to invade you.\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn [\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\ttechFeedback.join(\"\\n\\n\"),\n\t\t\t\t\t\t\tshipFeedback.join(\"\\n\\n\"),\n\t\t\t\t\t\t\tstarFeedback.join(\"\\n\\n\"),\n\t\t\t\t\t\t\t\"Note that all of this depends on your play style. Apart from the clearly losing setups, any of these can win games, and you should experiment to find which is best for you.\",\n\t\t\t\t\t\t\t\"All right. End Turn to finish this module or Reset Turn to try another setup!\",\n\t\t\t\t\t\t],\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function() {\n\t\t\t\t\treturn [true];\n\t\t\t\t},\n\t\t\t}\n\t\t],\n\t\tendMessages: [\n\t\t\t\"Oh wait. I forgot to cover how to *win*!\",\n\t\t\t\"If, at the end of any turn (yours or your opponent's), you have no ships at your homeworld, you LOSE.\",\n\t\t\t\"That's important. You can never abandon your homeworld!\",\n\t\t\t\"(Well, actually, you CAN abandon it mid-turn, like with a yellow sacrifice, as long as you get back home before your turn ends.)\",\n\t\t\t// somehow I don't feel like using JSX\n\t\t\tReact.createElement(\"span\", {}, \n\t\t\t\t\"Well, I think that about covers everything you need to know. I do have some more information on this site itself \",\n\t\t\t\tReact.createElement(\"a\", {href: \"/howThisWorks\"}, \"here\"),\n\t\t\t\t\", and Looney Labs has the official rules for Homeworlds \",\n\t\t\t\tReact.createElement(\"a\", {href: \"https://www.looneylabs.com/sites/default/files/pyramid_rules/Rules.Homeworlds.pdf\"}, \"here\"),\n\t\t\t\t\".\"\n\t\t\t),\n\t\t\t\"The next module is designed in case you have found the movement slightly confusing. It lets you move all around many different stars.\\n\\nFurther modules will cover more advanced strategies. Good luck!\"\n\t\t],\n\t}),\n\t\n\t// Star Connection Playground\n\tnew Tutorial({\n\t\ttitle: \"Star Connections Playground\",\n\t\tstartMap: {\n\t\t\t/*\n\t\t\t2 (enemy): enemy has b3,g3,r3; stars r1,y3\n\t\t\t\n\t\t\t7: enemy has b3,r2; stars y2\n\t\t\t6: enemy has b2,r1; stars y2\n\t\t\t\n\t\t\t8: enemy has b2,r2; stars y3\n\t\t\t\n\t\t\t3 (foreign HW): enemy has b3; stars y1,g2\n\t\t\t\n\t\t\t5: enemy has b1,b1; stars y1\n\t\t\t4: enemy has b1,r1; stars y1\n\t\t\t\n\t\t\t1 (you): stars y2,y3; you have r2,b2\n\t\t\t*/\n\t\t\t\n\t\t\tb1A: {at: 4, owner: \"enemy\"},\n\t\t\tb1B: {at: 5, owner: \"enemy\"},\n\t\t\tb1C: {at: 5, owner: \"enemy\"},\n\t\t\tb2A: {at: 1, owner: \"you\"},\n\t\t\tb2B: {at: 8, owner: \"enemy\"},\n\t\t\tb2C: {at: 6, owner: \"enemy\"},\n\t\t\tb3A: {at: 2, owner: \"enemy\"},\n\t\t\tb3B: {at: 7, owner: \"enemy\"},\n\t\t\tb3C: {at: 3, owner: \"enemy\"},\n\t\t\t\n\t\t\tg1A: null,\n\t\t\tg1B: null,\n\t\t\tg1C: null,\n\t\t\tg2A: {at: 3, owner: null},\n\t\t\tg2B: null,\n\t\t\tg2C: null,\n\t\t\tg3A: null,\n\t\t\tg3B: {at: 2, owner: \"enemy\"},\n\t\t\tg3C: null,\n\t\t\t\n\t\t\tr1A: {at: 4, owner: \"enemy\"},\n\t\t\tr1B: {at: 6, owner: \"enemy\"},\n\t\t\tr1C: {at: 2, owner: null},\n\t\t\tr2A: {at: 1, owner: \"you\"},\n\t\t\tr2B: {at: 8, owner: \"enemy\"},\n\t\t\tr2C: {at: 7, owner: \"enemy\"},\n\t\t\tr3A: null,\n\t\t\tr3B: null,\n\t\t\tr3C: {at: 2, owner: \"enemy\"},\n\t\t\t\n\t\t\ty1A: {at: 5, owner: null},\n\t\t\ty1B: {at: 4, owner: null},\n\t\t\ty1C: {at: 3, owner: null},\n\t\t\ty2A: {at: 1, owner: null},\n\t\t\ty2B: {at: 6, owner: null},\n\t\t\ty2C: {at: 7, owner: null},\n\t\t\ty3A: {at: 1, owner: null},\n\t\t\ty3B: {at: 2, owner: null},\n\t\t\ty3C: {at: 8, owner: null},\n\t\t},\n\t\tbannedActions: [\"trade\", \"sacrifice\", \"catastrophe\"],\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"In Homeworlds, two star systems are connected if and only if they do not share any size stars.\",\n\t\t\t\t\t\"Examples: A Small is connected to a Medium, but not another Small. A Small+Large two-star system is only connected to Mediums, and not to Medium+Large or Small+Medium homeworlds.\",\n\t\t\t\t\t\"If you find that a bit confusing, here is a scenario where you can move between lots of star systems.\",\n\t\t\t\t\t\"The enemy will NOT act in this scenario (but you still have to end your turn), and I have disabled the trade, sacrifice, and catastrophe actions.\\n\\nCan you capture all the ships?\",\n\t\t\t\t],\n\t\t\t\thint: \"Just move your red ship out.\",\n\t\t\t\tcheckAction: function(action) {\n\t\t\t\t\tif (action.type !== \"move\") {\n\t\t\t\t\t\treturn [false, \"I'd prefer you stick to movement and capturing for now.\"];\n\t\t\t\t\t}\n\t\t\t\t\tif (action.oldPiece !== \"r2A\") {\n\t\t\t\t\t\treturn [false, \"I'd prefer you move the red ship, so you can directly capture other ships.\"];\n\t\t\t\t\t}\n\t\t\t\t\treturn [true, \"All right. Now, capture all the ships (but end your turn first)!\"];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function() {\n\t\t\t\t\treturn [true, [\n\t\t\t\t\t\t\"You might have noticed the star map is arranged neatly to show the system connections.\",\n\t\t\t\t\t\t\"However, *always* remember that the actual position of stars on the map is entirely irrevelant and is only done as a visual aid.\",\n\t\t\t\t\t\t\"The sizes are all that matters.\\nCapture those ships!\",\n\t\t\t\t\t\t\"(Oh, and the Show Intro won't work anymore. Use Show Hint from now on if you need a refresher.)\",\n\t\t\t\t\t]]\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"loop\",\n\t\t\t\tstartMessages: [], // no annoying message every single turn\n\t\t\t\thint: [\n\t\t\t\t\t\"Systems are connected if they have NO sizes in common. It may take you two or three moves to get where you want to go...\",\n\t\t\t\t\t\"You need a large ship to attack other larges. Where can you build one?\",\n\t\t\t\t],\n\t\t\t\t\n\t\t\t\tcheckAction: function(action) {\n\t\t\t\t\tif (action.type === \"trade\" || action.type === \"catastrophe\") {\n\t\t\t\t\t\treturn [false, \"I've turned off those actions for now. \"]\n\t\t\t\t\t}\n\t\t\t\t\treturn [true];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\t// check if you have anything at home\n\t\t\t\t\tconst pieces = oldState.getPiecesAtHomeworlds();\n\t\t\t\t\tif (!pieces[\"you\"] || pieces[\"you\"].ships.length <= 0) {\n\t\t\t\t\t\t// oh no, you abandoned your homeworld!\n\t\t\t\t\t\t// (this almost should be standard...)\n\t\t\t\t\t\treturn [false, \"No! NEVER abandon your homeworld! You will lose!\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn [true];\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t// undefined/null => go to next\n\t\t\t\t// number => offset (e.g. 2 = go ahead 2 steps), can be negative, if overflows then we finish\n\t\t\t\t// \"end\" => finish tutorial (Infinity also works)\n\t\t\t\t// other string => step with matching \"id\" property\n\t\t\t\tnextStep: function(gameState) {\n\t\t\t\t\treturn gameState.phase === \"end\" ? 1 : 0;\n\t\t\t\t},\n\t\t\t}\n\t\t],\n\t\tendMessages: [\n\t\t\t\"Well done! I'll admit system number 3, the green/yellow binary, may have been a bit confusing. (It tripped me up when I was testing this!)\",\n\t\t\t\"This is part of why it is recommended to pick a different size combination than your opponent in homeworld setup.\",\n\t\t\t\"If you both had picked, say, small+large homeworlds, the stars would \"\n\t\t],\n\t}),\n];\n\n// I don't trust a raw {} to not have strange meanings\nexport default ({\n\ttitle: \"Basic Tutorials\",\n\tdescription: \"These cover the basics of gameplay. Start here if you don't already know how Homeworlds works!\",\n\tlist: tutorialList,\n});","// intermediateTutorials.js\n//\n// Some intermediate-level tutorials. They cover basic openings, freeze-outs, and the 3 main ways to win.\n\nimport React from 'react';\nimport Tutorial from './tutorialConstructor.js';\n\n\nconst tutorialList = [\n\t// Openings 1\n\tnew Tutorial({\n\t\ttitle: \"Basic Opening Strategy\",\n\t\tdisableWarnings: true,\n\t\tstartMap: {\n\t\t\t\"b1A\": null,\n\t\t\t\"b1B\": {\"at\": 1, \"owner\": null},\n\t\t\t\"b1C\": null,\n\t\t\t\"b2A\": null,\n\t\t\t\"b2B\": null,\n\t\t\t\"b2C\": null,\n\t\t\t\"b3A\": null,\n\t\t\t\"b3B\": null,\n\t\t\t\"b3C\": {\"at\": 2, \"owner\": null},\n\n\t\t\t\"g1A\": null,\n\t\t\t\"g1B\": null,\n\t\t\t\"g1C\": null,\n\t\t\t\"g2A\": null,\n\t\t\t\"g2B\": null,\n\t\t\t\"g2C\": null,\n\t\t\t\"g3A\": null,\n\t\t\t\"g3B\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"g3C\": {\"at\": 1, \"owner\": \"you\"},\n\n\t\t\t\"r1A\": null,\n\t\t\t\"r1B\": {\"at\": 2, \"owner\": null},\n\t\t\t\"r1C\": null,\n\t\t\t\"r2A\": null,\n\t\t\t\"r2B\": null,\n\t\t\t\"r2C\": null,\n\t\t\t\"r3A\": null,\n\t\t\t\"r3B\": null,\n\t\t\t\"r3C\": null,\n\n\t\t\t\"y1A\": null,\n\t\t\t\"y1B\": null,\n\t\t\t\"y1C\": null,\n\t\t\t\"y2A\": {\"at\": 1, \"owner\": null},\n\t\t\t\"y2B\": null,\n\t\t\t\"y2C\": null,\n\t\t\t\"y3A\": null,\n\t\t\t\"y3B\": null,\n\t\t\t\"y3C\": null,\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tdisableWarnings: true,\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"So now come the strategy guide modules. Here you'll find some tips on how to play better.\",\n\t\t\t\t\t\"The first question is, what do you do once you have made your homeworld? Well, it depends in part on what you picked.\",\n\t\t\t\t\t\"I've given you a B1+Y2 homeworld against an R1+B3, but a lot of these ideas apply to any setup situation.\",\n\t\t\t\t\t\"Your second turn will almost always be to build a second ship. (You can't capture anything, moving abandons your homeworld, and trading just wastes a turn because you could have picked the new ship to begin with.)\",\n\t\t\t\t],\n\t\t\t\tobjective: \"Build a second ship.\",\n\t\t\t\thint: \"If you've forgotten how the build action works: you click the existing ship of the same color, then click the Build button.\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"build\") {\n\t\t\t\t\t\treturn [true];\n\t\t\t\t\t} else if (action.type === \"sacrifice\") {\n\t\t\t\t\t\treturn [false, \"That actually won't work. You would not have any ships left, so you could no longer build.\"];\n\t\t\t\t\t} else if (action.type === \"discover\") {\n\t\t\t\t\t\treturn [false, \"That would abandon your homeworld! You can't do that or you will lose!\"];\n\t\t\t\t\t} else if (action.type === \"trade\") {\n\t\t\t\t\t\treturn [false, \"You don't want to trade quite yet! Then you would not have any green to build new ships!\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"I'm not sure what you did...\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"You haven't done anything yet!\"];\n\t\t\t\t\t}\n\t\t\t\t\treturn [true, \"That's the easiest turn of the game. Next turn you'll have to make a decision...\", {\n\t\t\t\t\t\ttype: \"build\",\n\t\t\t\t\t\tnewPiece: oldState.getPieceInStashByType('g1'),\n\t\t\t\t\t\tsystem: 2,\n\t\t\t\t\t}];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"What do do next?\",\n\t\t\t\t\t\"Well, you probably don't want to build the last small green and open up mediums.\",\n\t\t\t\t\t\"You do have movement, so you can discover a new system.\",\n\t\t\t\t\t\"Alternatively, you can trade for some other color.\",\n\t\t\t\t\t\"I'll let you pick which one you want to try. (This tutorial has 3 different branches; you can come back and try a different route.)\",\n\t\t\t\t],\n\t\t\t\thint: [\n\t\t\t\t\t\"Having trouble discovering? Look at your homeworld. Which size do you NOT have? That's the size you can move to.\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"build\") {\n\t\t\t\t\t\treturn [false, \"You're building the last small green... which lets your opponent get a medium.\"];\n\t\t\t\t\t} else if (action.type === \"trade\") {\n\t\t\t\t\t\tif (action.oldPiece[1] === \"3\") {\n\t\t\t\t\t\t\treturn [false, \"Trading your large is possible, but it's usually better to trade small ships.\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [true, \"Diversifying right away, eh?\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (action.type === \"discover\") {\n\t\t\t\t\t\tif (action.newPiece[0] !== \"b\") {\n\t\t\t\t\t\t\treturn [false, [\n\t\t\t\t\t\t\t\t\"I see you're being adventurous!\",\n\t\t\t\t\t\t\t\t\"But remember you only have the color powers at your system, which means you can't trade at this new system.\",\n\t\t\t\t\t\t\t\t\"I would recommend discovering a BLUE system.\",\n\t\t\t\t\t\t\t]];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [true, \"I see you're being adventurous!\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (action.type === \"sacrifice\") {\n\t\t\t\t\t\tif (action.oldPiece[1] === \"1\") {\n\t\t\t\t\t\t\t// sacrificed the small\n\t\t\t\t\t\t\treturn [false, [\n\t\t\t\t\t\t\t\t\"Sacrificing a small green... would get you 1 build. That can be useful sometimes (it lets you build where you don't have green). But does that help you *here*?\",\n\t\t\t\t\t\t\t]];\n\t\t\t\t\t\t} else if (action.oldPiece[1] === \"3\") {\n\t\t\t\t\t\t\t// sacrificed the large\n\t\t\t\t\t\t\treturn [false, [\n\t\t\t\t\t\t\t\t\"Trying to sacrifice the large, eh?\",\n\t\t\t\t\t\t\t\t\"I'm afraid that's a bit premature. Even if you did 3 builds, they would have to all be in your homeworld.\",\n\t\t\t\t\t\t\t\t\"Which would mean you would have 4 greens in one system. 4 isn't a good number, if you catch my drift...\",\n\t\t\t\t\t\t\t]];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn [false, \"I'm not entirely sure what you just did...\"];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.length > 0) {\n\t\t\t\t\t\treturn [false, \"You haven't done anything yet...\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// get which g1 is owned by the enemy\n\t\t\t\t\tlet enemyG1 = null;\n\t\t\t\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t\t\t\t// A = 65\n\t\t\t\t\t\tconst serial = 'g1' + String.fromCharCode(i + 65);\n\t\t\t\t\t\tif (oldState.map[serial] && oldState.map[serial].owner === \"enemy\") {\n\t\t\t\t\t\t\tenemyG1 = serial;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (oldState.nextSystemID === 4) {\n\t\t\t\t\t\treturn [true, \"Now, although you have yellow (movement ability), your opponent does not, so they're going to trade for it now.\", {\n\t\t\t\t\t\t\ttype: \"trade\",\n\t\t\t\t\t\t\toldPiece: enemyG1,\n\t\t\t\t\t\t\tnewPiece: oldState.getPieceInStashByType('y1'),\n\t\t\t\t\t\t}];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// they should trade for what you traded for\n\t\t\t\t\t\tconst pieces = oldState.getAllPiecesAtSystem(1);\n\t\t\t\t\t\tlet yourSmall = null;\n\t\t\t\t\t\tfor (let i = 0; i < pieces.length; i++) {\n\t\t\t\t\t\t\tconst pieceData = pieces[i];\n\t\t\t\t\t\t\tif (pieceData.serial[1] === \"1\" && pieceData.owner === \"you\") {\n\t\t\t\t\t\t\t\tyourSmall = pieceData.serial;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (yourSmall[0] === \"r\") {\n\t\t\t\t\t\t\treturn [true, [\n\t\t\t\t\t\t\t\t\"Ah, you've armed yourself with a weapon!\",\n\t\t\t\t\t\t\t\t\"It's generally good to get a weapon when your opponent gets one. Since reds are in short supply, they are going to trade now.\",\n\t\t\t\t\t\t\t], {\n\t\t\t\t\t\t\t\ttype: \"trade\",\n\t\t\t\t\t\t\t\toldPiece: enemyG1,\n\t\t\t\t\t\t\t\tnewPiece: oldState.getPieceInStashByType('r1'),\n\t\t\t\t\t\t\t}];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [true, \"Good. Let's see what they do...\", {\n\t\t\t\t\t\t\t\ttype: \"trade\",\n\t\t\t\t\t\t\t\toldPiece: enemyG1,\n\t\t\t\t\t\t\t\tnewPiece: oldState.getPieceInStashByType(yourSmall[0] + \"1\"),\n\t\t\t\t\t\t\t}];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tnextStep: function(oldState) {\n\t\t\t\t\t// Did you discover or trade?\n\t\t\t\t\t// (the enemy never discovers anything)\n\t\t\t\t\tif (oldState.nextSystemID === 4) {\n\t\t\t\t\t\treturn \"discovery-branch\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// detect which ship you traded for\n\t\t\t\t\t\tconst pieces = oldState.getAllPiecesAtSystem(1);\n\t\t\t\t\t\tlet smallShip = null;\n\t\t\t\t\t\tfor (let i = 0; i < pieces.length; i++) {\n\t\t\t\t\t\t\t// it must be a small and owned by you (i.e. not a star)\n\t\t\t\t\t\t\tif (pieces[i].serial[1] === \"1\" && pieces[i].owner === \"you\") {\n\t\t\t\t\t\t\t\tsmallShip = pieces[i].serial;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (smallShip[0] === \"y\") {\n\t\t\t\t\t\t\t// because yellow is the color of discovery AND there is still a Y1 in the bank\n\t\t\t\t\t\t\treturn \"trade-yellow-branch\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// because you can build mediums after the enemy copies you\n\t\t\t\t\t\t\treturn \"trade-medium-branch\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t\n\t\t\t// Branch 1: Discovery\n\t\t\t{\n\t\t\t\tid: \"discovery-branch\",\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Now you have a second colony!\",\n\t\t\t\t\t\"However, you only have one ship at each of your systems. Let's get more ships!\",\n\t\t\t\t],\n\t\t\t\thint: \"Just build a new ship. Either system is fine.\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"trade\") {\n\t\t\t\t\t\treturn [false, \"Hmmm... If you trade that, you'll no longer have green at that system, making it difficult to build more ships. It's better to trade when you have TWO ships.\"];\n\t\t\t\t\t} else if (action.type === \"move\" || action.type === \"discover\") {\n\t\t\t\t\t\treturn [false, \"No! Don't abandon your homeworld!\"];\n\t\t\t\t\t} else if (action.type === \"sacrifice\") {\n\t\t\t\t\t\treturn [false, \"Sacrificing now doesn't really help. The small only gets you 1 build and losing your large now abandons your homeworld.\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [true];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"You haven't done anything yet! Don't end your turn yet.\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [true, \"Good. Three ships already! You're on a roll!\", {\n\t\t\t\t\t\t\ttype: \"build\",\n\t\t\t\t\t\t\tnewPiece: oldState.getPieceInStashByType('y1'),\n\t\t\t\t\t\t\tsystem: 2,\n\t\t\t\t\t\t}];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"So there's one small yellow left in the bank.\",\n\t\t\t\t\t\"Let's get it while we can!...\",\n\t\t\t\t\t\"Wait a second... didn't I just say NOT to do that a few turns ago?\",\n\t\t\t\t\t\"Well, the reason is that here, after they build the medium yellow, you can build one of your own.\",\n\t\t\t\t\t\"But before, when you had 2 greens, if you built the last small and then a medium, that would make 4, an overpopulation.\",\n\t\t\t\t\t\"So you have to keep an eye not just on the Bank but also the population of your systems.\",\n\t\t\t\t\t\"Anyway, let's trade for yellow.\",\n\t\t\t\t],\n\t\t\t\thint: \"It's usually good to trade where you have two ships.\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"trade\") {\n\t\t\t\t\t\tif (action.newPiece[0] !== \"y\") {\n\t\t\t\t\t\t\treturn [false, \"That's fine, but let's trade for the small YELLOW ship. It's in short supply!\"];\n\t\t\t\t\t\t} else if (action.newPiece[1] !== \"1\") {\n\t\t\t\t\t\t\treturn [false, [\n\t\t\t\t\t\t\t\t\"That's fine, but it's usually better to trade your small pieces, if you can.\",\n\t\t\t\t\t\t\t\t\"Besides, in this case you don't want your large to be blue or yellow, because that is a catastrophe danger (it only takes 2 more of that color).\",\n\t\t\t\t\t\t\t\t\"(If you trade the small you can just move it out, but it's not a good idea to leave your homeworld without a large.)\"\n\t\t\t\t\t\t\t]];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// check if you have another ship there\n\t\t\t\t\t\t\tconst system = oldState.map[action.oldPiece];\n\t\t\t\t\t\t\tconst pieces = oldState.getAllPiecesAtSystem(system);\n\t\t\t\t\t\t\tlet foundOtherShip = false;\n\t\t\t\t\t\t\tfor (let i = 0; i < pieces.length; i++) {\n\t\t\t\t\t\t\t\t// it must be yours and different from the trading piece\n\t\t\t\t\t\t\t\tif (pieces[i].owner === \"you\" && pieces[i].serial !== action.oldPiece) {\n\t\t\t\t\t\t\t\t\tfoundOtherShip = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (foundOtherShip) {\n\t\t\t\t\t\t\t\treturn [true];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn [false, \"You could trade that, but then you would no longer have green at that system.\\nIt's better to trade when you already have 2 ships there.\"];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"You haven't done anything yet! Don't end your turn now.\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn [true, \"Now medium yellows are available. This game is heating up fast!\", {\n\t\t\t\t\t\ttype: \"build\",\n\t\t\t\t\t\tnewPiece: \"y2B\",\n\t\t\t\t\t\tsystem: 2,\n\t\t\t\t\t}];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"As expected, your opponent just got a medium yellow. Let's get one of our own!\",\n\t\t\t\t],\n\t\t\t\thint: \"Come on... you don't need a hint...\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"build\") {\n\t\t\t\t\t\treturn [true];\n\t\t\t\t\t} else if (action.type === \"sacrifice\") {\n\t\t\t\t\t\tif (action.oldPiece[1] === \"3\") {\n\t\t\t\t\t\t\treturn [false, \"That's still a *bit* premature, but I like that you're thinking of that sacrifice.\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"Sacrificing a small *is* useful when you don't have power to do an action somewhere. But right now, that doesn't really apply.\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"There's no real need to \" + action.type + \" anything right now. Let's get a medium-size ship!\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"You haven't done anything yet, so don't waste your turn!\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn [true, \"Look, larges are available... but your opponent can't build more without a catastrophe. What will they do instead?\", {\n\t\t\t\t\t\ttype: \"trade\",\n\t\t\t\t\t\toldPiece: \"y2B\",\n\t\t\t\t\t\tnewPiece: \"r2C\",\n\t\t\t\t\t}];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Your opponent just obtained a red ship.\",\n\t\t\t\t\t\"(Notice how they *traded* a medium yellow into a medium red. They already had a medium, so they didn't need to get small reds first.)\",\n\t\t\t\t\t\"Right now you are totally defenseless if they were to attack (i.e. send ships into your colonies).\",\n\t\t\t\t\t\"It may take a few turns for them to reach you, but it's generally better to be prepared.\",\n\t\t\t\t\t\"Let's get a red ship of our own.\",\n\t\t\t\t],\n\t\t\t\thint: \"In this case you probably want to trade one of the yellows.\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"trade\") {\n\t\t\t\t\t\tif (action.newPiece[0] === \"r\") {\n\t\t\t\t\t\t\tif (action.oldPiece[0] === \"y\") {\n\t\t\t\t\t\t\t\treturn [true]; // per-action messages are a bit annoying and I want to encourage end-turn\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn [false, [\n\t\t\t\t\t\t\t\t\t\"You probably don't want to trade your green away. If you do, you no longer have build power there.\",\n\t\t\t\t\t\t\t\t\t\"That would mean you have to waste a move trading for green later.\",\n\t\t\t\t\t\t\t\t]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// didn't take a red\n\t\t\t\t\t\t\treturn [false, \"Right now it would be better to trade for a red piece, as a deterrent against invasions.\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// didn't trade\n\t\t\t\t\t\treturn [false, [\n\t\t\t\t\t\t\t\"There's no pressing need to trade right now, but you don't want to put it off TOO long.\",\n\t\t\t\t\t\t\t\"It's better to be safe and trade now, and besides, you get to build more red next turn!\",\n\t\t\t\t\t\t]];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false, \"You haven't done anything yet... don't end your turn yet!\"];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn [true, [\n\t\t\t\t\t\t\"There you go!\",\n\t\t\t\t\t\t\"The red power is a useful deterrent. Now your opponent won't invade you because you would just sacrifice your red and capture their ship!\",\n\t\t\t\t\t\t\"Anyway, the next goal would be to expand your fleet more, maybe discover another system, maybe get some blue ships...\",\n\t\t\t\t\t\t\"...but for that you need to play the real game!\",\n\t\t\t\t\t], {\n\t\t\t\t\t\ttype: \"discover\",\n\t\t\t\t\t\toldPiece: \"r2C\",\n\t\t\t\t\t\tnewPiece: \"g2B\",\n\t\t\t\t\t}];\n\t\t\t\t},\n\t\t\t\t// automatically go to the end\n\t\t\t\tnextStep: function() {\n\t\t\t\t\treturn 999;\n\t\t\t\t},\n\t\t\t},\n\t\t\t\n\t\t\t// Branch 2: Trade for Yellow\n\t\t\t{\n\t\t\t\tid: \"trade-yellow-branch\",\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"I see you have a yellow ship.\",\n\t\t\t\t\t\"It may look redundant, but it's actually good to have yellow ships, particularly mediums and larges, so you can sacrifice for several moves at once.\",\n\t\t\t\t\t\"It looks like your opponent also traded for yellow.\",\n\t\t\t\t\t\"There's one yellow ship left. You probably shouldn't take it, because (1) you already have yellow and (2) it lets your opponent get mediums.\",\n\t\t\t\t\t\"So what else?\",\n\t\t\t\t\t\"There's not much else going on, so how about just building a small green?\",\n\t\t\t\t],\n\t\t\t\thint: \"Error 404: Hint Not Found\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\t\n\t\t\t\t},\n\t\t\t}\n\t\t],\n\t\tendMessages: [\n\t\t\t\"I'm sorry to cut this off here, but you have to play the real game for more!\",\n\t\t\t\"This module actually has four different branches (three for the colors you can trade for, plus one if you discover a system right away).\",\n\t\t\t\"The important thing to keep in mind is to always watch the Bank!\",\n\t\t\t\"The next tutorial covers another opening trick, but after that, you'll learn how to actually win!\",\n\t\t],\n\t}),\n\t\n\t// Openings 2\n\tnew Tutorial({\n\t\ttitle: \"Opening Tricks: The Freeze-Out\",\n\t\tstartMap: {\n\t\t\t\"b1A\": null,\n\t\t\t\"b1B\": null,\n\t\t\t\"b1C\": null,\n\t\t\t\"b2A\": null,\n\t\t\t\"b2B\": null,\n\t\t\t\"b2C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"b3A\": null,\n\t\t\t\"b3B\": null,\n\t\t\t\"b3C\": {\"at\": 1, \"owner\": null},\n\n\t\t\t\"g1A\": null,\n\t\t\t\"g1B\": null,\n\t\t\t\"g1C\": null,\n\t\t\t\"g2A\": null,\n\t\t\t\"g2B\": null,\n\t\t\t\"g2C\": null,\n\t\t\t\"g3A\": null,\n\t\t\t\"g3B\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"g3C\": {\"at\": 1, \"owner\": \"you\"},\n\n\t\t\t\"r1A\": null,\n\t\t\t\"r1B\": {\"at\": 1, \"owner\": null},\n\t\t\t\"r1C\": null,\n\t\t\t\"r2A\": null,\n\t\t\t\"r2B\": null,\n\t\t\t\"r2C\": null,\n\t\t\t\"r3A\": null,\n\t\t\t\"r3B\": null,\n\t\t\t\"r3C\": null,\n\n\t\t\t\"y1A\": null,\n\t\t\t\"y1B\": null,\n\t\t\t\"y1C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"y2A\": null,\n\t\t\t\"y2B\": null,\n\t\t\t\"y2C\": null,\n\t\t\t\"y3A\": null,\n\t\t\t\"y3B\": null,\n\t\t\t\"y3C\": null,\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"So do that.\",\n\t\t\t\t],\n\t\t\t\thint: \"Come on, you don't need a hint here.\",\n\t\t\t\tobjective: \"Build a new ship\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"build\") {\n\t\t\t\t\t\treturn [true];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"I suppose I should appreciate your curiosity. Please report any bugs you inevitably find.\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [true, \"I think you know what the opponent is doing... (no, there are no surprises left)\", {\n\t\t\t\t\t\t\ttype: \"build\",\n\t\t\t\t\t\t\tnewPiece: oldState.getPieceInStashByType('g', 1),\n\t\t\t\t\t\t\tsystem: 2,\n\t\t\t\t\t\t}];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"In this particular game, you don't have any yellow, so you can't move away.\",\n\t\t\t\t\t\"But you do have blue technology in your star, so you can get yellow with a trade.\",\n\t\t\t\t\t\"Let's trade our small green.\",\n\t\t\t\t],\n\t\t\t\thint: \"Error 404: Hint Not Found.\",\n\t\t\t\tobjective: \"Get a yellow ship\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type === \"trade\") {\n\t\t\t\t\t\tif (action.oldPiece.substring(0, 2) === \"g3\") {\n\t\t\t\t\t\t\treturn [false, \"I don't suggest trading away your large unless you have to. But admittedly this is more because I have something set up that only happens if you trade the small.\"];\n\t\t\t\t\t\t} else if (action.newPiece[0] !== \"y\") {\n\t\t\t\t\t\t\treturn [false, \"That's fine, except that right now you don't have the ability to leave your homeworld. How about trading for yellow?\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [true, \"\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (action.type === \"build\") {\n\t\t\t\t\t\treturn [false, [\n\t\t\t\t\t\t\t\"Ah, you see, this is why Homeworlds is a game of economics.\",\n\t\t\t\t\t\t\t\"There are 3 small greens on the board, which means your opponent can build a medium green now.\",\n\t\t\t\t\t\t\t\"Why give them a material advantage so early?\",\n\t\t\t\t\t\t]];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [false, \"Uhhh... did you mis-click? Try again.\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.actions.number > 0) {\n\t\t\t\t\t\treturn [false];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// get the g1\n\t\t\t\t\t\tlet enemyShip = '';\n\t\t\t\t\t\tconst letters = 'ABC';\n\t\t\t\t\t\tfor (let i = 0; i < letters.length; i++) {\n\t\t\t\t\t\t\tconst data = oldState.map['g1' + letters[i]];\n\t\t\t\t\t\t\tif (data && data.at === 2) {\n\t\t\t\t\t\t\t\tenemyShip = 'g1' + letters[i];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [true, \"All right. I mean, if you want to trade the large green in your games, it's all yours. But this particular move leads to a weird outcome...\", {\n\t\t\t\t\t\t\ttype: \"trade\",\n\t\t\t\t\t\t\toldPiece: enemyShip,\n\t\t\t\t\t\t\tnewPiece: oldState.getPieceInStashByType('r1'),\n\t\t\t\t\t\t}];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Sorry for forcing the issue here, but...\",\n\t\t\t\t\t\"There's only *one* small yellow left in the bank.\",\n\t\t\t\t\t\"Which means if you build it, the enemy won't be able to trade for it!\",\n\t\t\t\t],\n\t\t\t\thint: \"Just read the intro again.\",\n\t\t\t\tobjective: \"Build the other yellow ship.\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type !== \"build\") {\n\t\t\t\t\t\treturn [false, \"\"]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}\n\t\t],\n\t\tendMessages: [],\n\t}),\n\t\n\t// Direct Assault\n\tnew Tutorial({\n\t\ttitle: \"Direct Assault\",\n\t\tsubtitle: \"Basic Paths to Victory, 1/3\",\n\t\tstartMap: {\n\t\t\t/*\n\t\t\t2 (enemy): enemy has g2,g1,y1; stars b2,r3; \n\t\t\t\n\t\t\t3: enemy has b2,y2,r2; stars g1\n\t\t\t4: stars b1, you have r3,y2\n\t\t\t\n\t\t\t5: enemy has y3, stars g3, you have b2,r1\n\t\t\t\n\t\t\t1 (you): stars b1,r2; you have y3,g1,g2\n\t\t\t*/\n\t\t\t\n\t\t\tb1A: {at: 1, owner: null},\n\t\t\tb1B: {at: 4, owner: null},\n\t\t\tb1C: null,\n\t\t\tb2A: {at: 5, owner: \"you\"},\n\t\t\tb2B: {at: 2, owner: null},\n\t\t\tb2C: {at: 3, owner: \"enemy\"},\n\t\t\tb3A: null,\n\t\t\tb3B: null,\n\t\t\tb3C: null,\n\t\t\t\n\t\t\tg1A: {at: 1, owner: \"you\"},\n\t\t\tg1B: {at: 3, owner: null},\n\t\t\tg1C: {at: 2, owner: \"enemy\"},\n\t\t\tg2A: {at: 1, owner: \"you\"},\n\t\t\tg2B: {at: 2, owner: \"enemy\"},\n\t\t\tg2C: null,\n\t\t\tg3A: {at: 5, owner: \"you\"},\n\t\t\tg3B: {at: 5, owner: null},\n\t\t\tg3C: null,\n\t\t\t\n\t\t\tr1A: {at: 5, owner: \"you\"},\n\t\t\tr1B: {at: 3, owner: \"enemy\"},\n\t\t\tr1C: null,\n\t\t\tr2A: {at: 1, owner: null},\n\t\t\tr2B: null,\n\t\t\tr2C: null,\n\t\t\tr3A: {at: 4, owner: \"you\"},\n\t\t\tr3B: null,\n\t\t\tr3C: {at: 2, owner: null},\n\t\t\t\n\t\t\ty1A: {at: 2, owner: \"enemy\"},\n\t\t\ty1B: null,\n\t\t\ty1C: null,\n\t\t\ty2A: {at: 4, owner: \"you\"},\n\t\t\ty2B: {at: 3, owner: \"enemy\"},\n\t\t\ty2C: null,\n\t\t\ty3A: {at: 1, owner: \"you\"},\n\t\t\ty3B: {at: 5, owner: \"enemy\"},\n\t\t\ty3C: null,\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t// dunno if the \\n's will do anything\n\t\t\t\t\t\"So you may know that you lose the game if you ever have zero ships at your homeworld.\",\n\t\t\t\t\t\"But maybe you're wondering how you actually go about pulling off a win? That's the subject of the next three modules.\",\n\t\t\t\t\t\"There are three main paths to victory. Each one has its own requirements and defenses.\",\n\t\t\t\t\t\"One way to win is to use the red (steal) ability to capture all your opponent's ships. Of course, you have to ensure they don't capture you first...\",\n\t\t\t\t\t\"Here is an example. Can you invade the opponent's homeworld?\"\n\t\t\t\t],\n\t\t\t\thint: \"There's a nice big ship you have right next to their homeworld...\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tconsole.log(action);\n\t\t\t\t\tif (action.type === \"sacrifice\") {\n\t\t\t\t\t\treturn [false, \"You don't need to sacrifice anything. A simple movement will do.\"];\n\t\t\t\t\t}\n\t\t\t\t\tif (action.type === \"discover\") {\n\t\t\t\t\t\treturn [false, \"You don't need to discover a *new* system, just invade their homeworld!\"];\n\t\t\t\t\t}\n\t\t\t\t\tif (action.type !== \"move\") {\n\t\t\t\t\t\treturn [false, \"You need to move a ship to invade!\"];\n\t\t\t\t\t}\n\t\t\t\t\t// 2 is the enemy's homeworld\n\t\t\t\t\tif (action.system !== 2) {\n\t\t\t\t\t\treturn [false, \"Let's try moving a ship directly into their homeworld.\"];\n\t\t\t\t\t}\n\t\t\t\t\t// r3A is the red you have to invade with\n\t\t\t\t\tif (action.oldPiece !== \"r3A\") {\n\t\t\t\t\t\treturn [false, \"Almost there! A medium won't do, because your opponent has a medium as well and can just capture yours. But do you have something stronger?\"];\n\t\t\t\t\t}\n\t\t\t\t\treturn [true, \"You got it! Remember to end your turn...\"];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\treturn [true, \"Great! Now, let's see what your opponent does...\", {\n\t\t\t\t\t\t// opponent response(s)\n\t\t\t\t\t\ttype: \"discover\",\n\t\t\t\t\t\toldPiece: \"b2C\",\n\t\t\t\t\t\tnewPiece: \"g2C\",\n\t\t\t\t\t}];\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Fortunately for you, they don't have any large ships and can't attack you first!\",\n\t\t\t\t\t\"Let's raid their homeworld! To capture a ship, click on the enemy's ship first.\",\n\t\t\t\t],\n\t\t\t\thint: \"All you need to do is capture one of their ships.\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (action.type !== \"steal\") {\n\t\t\t\t\t\treturn [false, \"You need to capture ships at the enemy's homeworld to win!\"];\n\t\t\t\t\t}\n\t\t\t\t\treturn [true, null];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\treturn [true, \"One down, two to go... wait, what's this?!\", {\n\t\t\t\t\t\ttype: \"build\",\n\t\t\t\t\t\tnewPiece: \"g3C\",\n\t\t\t\t\t\tsystem: 2,\n\t\t\t\t\t}];\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Problem... or not?\",\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Looks like your opponent has built a large ship now! But it's your turn...\",\n\t\t\t\t],\n\t\t\t\thint: \"The biggest obstacle should be dealt with first.\",\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\t// sacrifice green to cause catastrophe or sacrifice yellow to move G3 in\n\t\t\t\t\tif (action.type === \"sacrifice\") {\n\t\t\t\t\t\tif (action.oldPiece[0] === \"g\" || action.oldPiece[0] === \"y\") {\n\t\t\t\t\t\t\treturn [true]; // if they have an idea let them use it\n\t\t\t\t\t\t} else if (action.oldPiece[0] === \"r3A\") {\n\t\t\t\t\t\t\treturn [false, \"Trying to be efficient, eh?\\nYou can't have your ship and sacrifice it too...\\n\\n(you can't capture the large green if you don't have a large anymore)\"];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (action.type === \"steal\") {\n\t\t\t\t\t\treturn [true]; // let them make the mistake if it's not the G3\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn [false, \"You need to capture ALL of the ships at the enemy's homeworld to win!\"]\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\t// did you find a way to destroy the g3?\n\t\t\t\t\tif (oldState.map.g3C === null) {\n\t\t\t\t\t\treturn [true, \"Clever! You could have just attacked the large green, but it's good to think creatively on things like this!\"]\n\t\t\t\t\t} else if (oldState.map.g3C.owner === \"you\") {\n\t\t\t\t\t\treturn [true, \"Good. As soon as they build anything, you just take it.\"];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\tendMessages: [\n\t\t\t\"Nice work. Keep in mind this only worked because your opponent did not have a large ship at their home.\",\n\t\t\t\"If they had, they could have attacked you when you came in...\",\n\t\t\t\"In the next two modules we will look at a few other ways to win. There's also a later module with some more advanced Direct Assaults.\"\n\t\t],\n\t}),\n\t\n\t// Fleet Catastrophe\n\tnew Tutorial({\n\t\ttitle: \"Fleet Catastrophe\",\n\t\tsubtitle: \"Basic Paths to Victory, 2/3\",\n\t\tstartMap: {\n\t\t\t\"b1A\": null,\n\t\t\t\"b1B\": {\"at\": 7, \"owner\": null},\n\t\t\t\"b1C\": {\"at\": 3, \"owner\": null},\n\t\t\t\"b2A\": null,\n\t\t\t\"b2B\": {\"at\": 4, \"owner\": \"enemy\"},\n\t\t\t\"b2C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"b3A\": null,\n\t\t\t\"b3B\": null,\n\t\t\t\"b3C\": {\"at\": 1, \"owner\": null},\n\n\t\t\t\"g1A\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"g1B\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"g1C\": {\"at\": 1, \"owner\": \"you\"},\n\t\t\t\"g2A\": {\"at\": 5, \"owner\": \"you\"},\n\t\t\t\"g2B\": {\"at\": 8, \"owner\": null},\n\t\t\t\"g2C\": {\"at\": 6, \"owner\": null},\n\t\t\t\"g3A\": {\"at\": 4, \"owner\": null},\n\t\t\t\"g3B\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"g3C\": {\"at\": 1, \"owner\": \"you\"},\n\n\t\t\t\"r1A\": {\"at\": 8, \"owner\": \"you\"},\n\t\t\t\"r1B\": {\"at\": 4, \"owner\": \"enemy\"},\n\t\t\t\"r1C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"r2A\": null,\n\t\t\t\"r2B\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"r2C\": {\"at\": 1, \"owner\": null},\n\t\t\t\"r3A\": null,\n\t\t\t\"r3B\": null,\n\t\t\t\"r3C\": null,\n\n\t\t\t\"y1A\": {\"at\": 6, \"owner\": \"enemy\"},\n\t\t\t\"y1B\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"y1C\": null,\n\t\t\t\"y2A\": {\"at\": 4, \"owner\": \"enemy\"},\n\t\t\t\"y2B\": {\"at\": 7, \"owner\": \"you\"},\n\t\t\t\"y2C\": {\"at\": 6, \"owner\": \"enemy\"},\n\t\t\t\"y3A\": {\"at\": 1, \"owner\": \"you\"},\n\t\t\t\"y3B\": {\"at\": 4, \"owner\": \"enemy\"},\n\t\t\t\"y3C\": {\"at\": 5, \"owner\": null},\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Direct assault is straightforward, but it's also rather easy to defend against by keeping a large ship at home.\",\n\t\t\t\t\t\"But sometimes you can destroy that large ship using a catastrophe.\",\n\t\t\t\t\t\"In fact, if all your opponent's ships are the same color and you have enough movement, you can win right there!\",\n\t\t\t\t\t\"Can you win in one turn?\",\n\t\t\t\t\t\"Oh, and I'm going to start being less helpful. There's still a hint and you always have the Reset Turn. Good luck!\",\n\t\t\t\t],\n\t\t\t\tobjective: \"Destroy all the ships in the enemy's homeworld.\",\n\t\t\t\thint: [\n\t\t\t\t\t\"Are systems 6 and 8 throwing you off?\",\n\t\t\t\t\t\"Remember star systems are connected if they have no star sizes in common.\",\n\t\t\t\t\t\"6 and 8 are displayed in the middle because they aren't connected to either homeworld. But you can, for instance, move directly from 7 to 4 because those stars are still different sizes.\",\n\t\t\t\t\t\"You *do* have enough moves here if you plan correctly.\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\t// I'm just going to let them figure this out on their own.\n\t\t\t\t\treturn [true];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.isSystemOverpopulated('g', 2)) {\n\t\t\t\t\t\treturn [false, \"You have to manually invoke the catastrophe! Click one of the ships, then click the catastrophe button.\"];\n\t\t\t\t\t} else if (oldState.map.g3B) {\n\t\t\t\t\t\t// the lead ship is intact, you failed\n\t\t\t\t\t\treturn [false, \"Hmmm... It looks like you've found 1 way not to destroy a homeworld. Reset your turn, and try again!\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [true, \"There you go!\"];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\tendMessages: [\n\t\t\t\"You did it!\",\n\t\t\t\"The opponent, by keeping only one color at their homeworld, committed what is known as the Bluebird Mistake.\",\n\t\t\t\"Apparently there was this one real-life game played at some coffee shop called the Bluebird where this mistake won a game.\",\n\t\t\t\"This is why you should usually have two colors at your homeworld.\",\n\t\t\t\"However, even then, sometimes a combination of Fleet Catastrophe and Direct Assault can work, where you move in a large after destroying theirs.\",\n\t\t\t\"Anyway, the last path to victory is definitely the hardest to pull off, but it's also the most surefire way.\",\n\t\t],\n\t}),\n\t\n\t// Star Demolition\n\tnew Tutorial({\n\t\ttitle: \"Star Demolition\",\n\t\tsubtitle: \"Basic Paths to Victory, 3/3\",\n\t\tstartMap: {\n\t\t\t\"b1A\": {\"at\": 4, \"owner\": \"you\"},\n\t\t\t\"b1B\": {\"at\": 6, \"owner\": \"you\"},\n\t\t\t\"b1C\": {\"at\": 11, \"owner\": null},\n\t\t\t\"b2A\": {\"at\": 4, \"owner\": \"you\"},\n\t\t\t\"b2B\": {\"at\": 7, \"owner\": null},\n\t\t\t\"b2C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"b3A\": {\"at\": 8, \"owner\": \"enemy\"},\n\t\t\t\"b3B\": {\"at\": 10, \"owner\": null},\n\t\t\t\"b3C\": {\"at\": 1, \"owner\": null},\n\n\t\t\t\"g1A\": {\"at\": 4, \"owner\": null},\n\t\t\t\"g1B\": {\"at\": 10, \"owner\": \"you\"},\n\t\t\t\"g1C\": {\"at\": 2, \"owner\": null},\n\t\t\t\"g2A\": {\"at\": 9, \"owner\": \"you\"},\n\t\t\t\"g2B\": {\"at\": 3, \"owner\": null},\n\t\t\t\"g2C\": {\"at\": 10, \"owner\": \"you\"},\n\t\t\t\"g3A\": {\"at\": 8, \"owner\": null},\n\t\t\t\"g3B\": {\"at\": 5, \"owner\": null},\n\t\t\t\"g3C\": {\"at\": 1, \"owner\": \"you\"},\n\n\t\t\t\"r1A\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"r1B\": {\"at\": 6, \"owner\": null},\n\t\t\t\"r1C\": null,\n\t\t\t\"r2A\": null,\n\t\t\t\"r2B\": null,\n\t\t\t\"r2C\": null,\n\t\t\t\"r3A\": null,\n\t\t\t\"r3B\": {\"at\": 9, \"owner\": null},\n\t\t\t\"r3C\": {\"at\": 2, \"owner\": \"enemy\"},\n\n\t\t\t\"y1A\": null,\n\t\t\t\"y1B\": {\"at\": 8, \"owner\": \"enemy\"},\n\t\t\t\"y1C\": {\"at\": 1, \"owner\": null},\n\t\t\t\"y2A\": {\"at\": 11, \"owner\": \"enemy\"},\n\t\t\t\"y2B\": {\"at\": 5, \"owner\": \"enemy\"},\n\t\t\t\"y2C\": {\"at\": 7, \"owner\": \"enemy\"},\n\t\t\t\"y3A\": {\"at\": 2, \"owner\": \"enemy\"},\n\t\t\t\"y3B\": {\"at\": 3, \"owner\": \"you\"},\n\t\t\t\"y3C\": {\"at\": 6, \"owner\": \"you\"},\n\t\t},\n\t\tsteps: [\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"There's a lot going on here, and that is because Star Demolition, the last main path to victory, takes the most work.\",\n\t\t\t\t\t\"You see, you can cause catastrophes to destroy the opponent's homeworld stars. But you need 2 catastrophes, which takes at least 6 ships if the opponent doesn't help you.\",\n\t\t\t\t\t\"Plus, moving one at a time is usually too slow (it gives the enemy time to counter-attack or just capture the ships), so you need yellow to sacrifice.\",\n\t\t\t\t\t\"Here's a situation where you can obliterate the enemy homeworld in just two turns. Can you see what to do?\",\n\t\t\t\t],\n\t\t\t\tobjective: \"Destroy the enemy homeworld in 2 turns\",\n\t\t\t\thint: [\n\t\t\t\t\t\"Can you destroy *one* of the stars this turn? Which one?\",\n\t\t\t\t],\n\t\t\t\tcheckAction: function(action, oldState) {\n\t\t\t\t\tif (oldState.actions.sacrifice) {\n\t\t\t\t\t\tif (action.type === \"move\") {\n\t\t\t\t\t\t\tif (action.oldPiece[0] === \"b\") {\n\t\t\t\t\t\t\t\treturn [false, [\n\t\t\t\t\t\t\t\t\t\"Hmmm...\",\n\t\t\t\t\t\t\t\t\t\"Sometimes with Star Demolition you *can* get away with moving, say, 2 greens and a blue (for a green-blue homeworld).\",\n\t\t\t\t\t\t\t\t\t\"But as for this one... how many moves can you make through yellow sacrifices? And how many ships do you need in order to blow up two stars?\",\n\t\t\t\t\t\t\t\t\t\"...\",\n\t\t\t\t\t\t\t\t]];\n\t\t\t\t\t\t\t} else if (action.oldPiece.substring(0, 2) === \"g3\") {\n\t\t\t\t\t\t\t\treturn [false, \"No! Don't abandon your homeworld!!\"];\n\t\t\t\t\t\t\t} else if (action.oldPiece[0] !== \"g\") {\n\t\t\t\t\t\t\t\treturn [false, \"What colors are the enemy's homeworld? You want to be moving those colors in to cause catastrophes.\"];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn [true];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (action.type === \"catastrophe\") {\n\t\t\t\t\t\t\treturn [true, [\n\t\t\t\t\t\t\t\t\"One down, one to go!\",\n\t\t\t\t\t\t\t\t\"Hey, notice the map re-arranged a bit...\",\n\t\t\t\t\t\t\t\t\"Your enemy's homeworld lost its small green, so it is connected to small AND large systems now!\",\n\t\t\t\t\t\t\t\t\"Small and large...\",\n\t\t\t\t\t\t\t\t\"...\",\n\t\t\t\t\t\t\t\t\"...\",\n\t\t\t\t\t\t\t\t\"(remember end turn)\",\n\t\t\t\t\t\t\t]];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (action.type === \"sacrifice\") {\n\t\t\t\t\t\t\tif (action.oldPiece[0] === \"y\") {\n\t\t\t\t\t\t\t\treturn [true]; // you only have Y3s\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn [false, \"You have to *move* ships in to cause a catastrophe...\"];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [false, \"Hmmm... a regular move won't cut it, I'm afraid.\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.isSystemOverpopulated('g', 2)) {\n\t\t\t\t\t\treturn [false, \"Whoops. You have to actually invoke the catastrophe. Click one of the green ships, then click the catastrophe button.\"];\n\t\t\t\t\t} else if (oldState.map.g1C) {\n\t\t\t\t\t\t// star is intact\n\t\t\t\t\t\treturn [false, \"Hmmm... It turns out you actually can't win this particular situation without blowing up the green star.\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [true, [], {\n\t\t\t\t\t\t\ttype: \"move\",\n\t\t\t\t\t\t\toldPiece: \"r3C\",\n\t\t\t\t\t\t\tsystem: 1, // revenge invasion!\n\t\t\t\t\t\t}];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartMessages: [\n\t\t\t\t\t\"Gaah! Where'd that guy come from?\",\n\t\t\t\t\t\"And... Eek! We don't have any red at all!\",\n\t\t\t\t\t\"Don't panic...\",\n\t\t\t\t\t\"...\",\n\t\t\t\t\t\"Right... Your homeworld is a Small+Large binary (binary just means 2 stars)...\",\n\t\t\t\t\t\"...and your enemy's is just a Medium, so they have no sizes in common, so they are connected!\",\n\t\t\t\t\t\"...\",\n\t\t\t\t\t\"Well...\",\n\t\t\t\t\t\"I guess you just have to win before they get a turn!\",\n\t\t\t\t\t\"(this time I'm not going to stop you until you end your turn)\",\n\t\t\t\t],\n\t\t\t\tobjective: \"Destroy the enemy's homeworld this turn.\",\n\t\t\t\thint: \"Their homeworld is connected to small systems now.\",\n\t\t\t\tcheckAction: function() {\n\t\t\t\t\t// lazy\n\t\t\t\t\treturn [true];\n\t\t\t\t},\n\t\t\t\tcheckEndTurn: function(oldState) {\n\t\t\t\t\tif (oldState.isSystemOverpopulated('b', 2)) {\n\t\t\t\t\t\treturn [false, \"Still gotta remember to hit that catastrophe button!\"];\n\t\t\t\t\t} else if (oldState.map.b2C) {\n\t\t\t\t\t\treturn [false, \"You haven't failed, you just found one way not to destroy a star!\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [true, \"Whew. That was close.\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}\n\t\t],\n\t\tendMessages: [\n\t\t\t\"Yep.\",\n\t\t\t\"That particular setup is called a Doomsday Machine.\",\n\t\t\t\"It's powerful because it often can't be stopped, but there are other ways.\",\n\t\t\t\"You don't need to have everything set up at once; you can even destroy one star and then destroy the other 15 turns later!\",\n\t\t\t\"BUT...\",\n\t\t\t\"The longer you wait, the greater the chance of an enemy counter-attack.\",\n\t\t\t\"And you normally have to give up at least 4 ships for the first star, so you'll be down in material.\",\n\t\t\t\"Many experts suggest you NOT blow up one star unless you have a plan to get the other.\",\n\t\t\t\"However, you don't *always* need two Y3s. See the advanced version of this tutorial.\",\n\t\t\t\"Well... this is message 10... But that's the last main way to win.\",\n\t\t\t\"If you need a break you've earned it.\",\n\t\t],\n\t}),\n];\n\nexport default {\n\ttitle: \"Intermediate Tutorials\",\n\tdescription: \"These tutorials discuss some opening strategy and the main ways to win the game.\",\n\tlist: tutorialList,\n};","// tutorialConstructor.js\n//\n// I'm not really sure why I used this instead of a standard object\n// I guess it just looked better\nfunction Tutorial(data) {\n\tthis.title = data.title;\n\tthis.disableWarnings = data.disableWarnings;\n\t// the second \"t\" is important!\n\tthis.startMap = data.startMap;\n\tthis.steps = data.steps;\n\tthis.endMessages = data.endMessages;\n}\n\nexport default Tutorial;"],"sourceRoot":""}